fticr_data_goethite_oxygen %>%
select(Mass, Forest, Fenton, PreGoethite, preg_rel_abund, adsorbed, new, O)->
fticr_data_goethite_oxygen2
ggplot(fticr_data_goethite_oxygen2[!is.na(fticr_data_goethite_oxygen2$adsorbed),], aes(x = factor(O), y = preg_rel_abund, color = adsorbed))+
geom_boxplot()
ggplot(fticr_data_goethite_oxygen2[!is.na(fticr_data_goethite_oxygen2$adsorbed),], aes(x = factor(O), y = preg_rel_abund, color = adsorbed))+
geom_bar()
ggplot(fticr_data_goethite_oxygen2[!is.na(fticr_data_goethite_oxygen2$adsorbed),], aes(x = factor(O), y = preg_rel_abund, color = adsorbed))+
geom_bar(stat = "identity")
#
#
# 4.3 adsorbed/non-adsorbed by O, N ----
fticr_data_goethite3 = merge(fticr_data_goethite_relabund, fticr_meta_elements, by = "Mass", all.x = T)
fticr_data_goethite4 = merge(fticr_data_goethite_relabund, fticr_meta_elements, by = "Mass", all.x = T)
fticr_data_goethite4 = merge(fticr_data_goethite4, fticr_meta_subset, by = "Mass", all.x = T)
fticr_meta_subset = read.csv("fticr/fticr_meta_subset.csv")
fticr_data_goethite4 = merge(fticr_data_goethite4, fticr_meta_subset, by = "Mass", all.x = T)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin" &
fticr_data_goethite4$sorption_frac=="most sorbed" |
fticr_data_goethite4$sorption_frac=="most unbound",],
aes(y = delta_abund, x = as.factor(O), fill=sorption_frac))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin"|
fticr_data_goethite4$Class=="Protein"|
fticr_data_goethite4$Class=="Tannin"|
fticr_data_goethite4$Class=="Carb",],
aes(y = preg_rel_abund, x = as.factor(O), fill = Fenton))+
geom_bar(stat = "identity", position = position_dodge())+
facet_wrap(~Class)+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin"|
fticr_data_goethite4$Class=="Protein"|
fticr_data_goethite4$Class=="Tannin"|
fticr_data_goethite4$Class=="Carb",],
aes(y = preg_rel_abund, x = as.factor(O), fill = Fenton))+
geom_bar(stat = "summary", position = position_dodge())+
facet_wrap(~Class)+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin"|
fticr_data_goethite4$Class=="Protein"|
fticr_data_goethite4$Class=="Tannin"|
fticr_data_goethite4$Class=="Carb",],
aes(y = preg_rel_abund, x = as.factor(O), fill = Fenton))+
geom_bar(stat = "identity", position = position_dodge())+
facet_wrap(~Class)+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin"|
fticr_data_goethite4$Class=="Protein"|
fticr_data_goethite4$Class=="Tannin"|
fticr_data_goethite4$Class=="Carb",],
aes(y = preg_rel_abund, x = as.factor(O), fill = Fenton))+
geom_bar(stat = "sum", position = position_dodge())+
facet_wrap(~Class)+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin"|
fticr_data_goethite4$Class=="Protein"|
fticr_data_goethite4$Class=="Tannin"|
fticr_data_goethite4$Class=="Carb",],
aes(y = preg_rel_abund, x = as.factor(O), fill = Fenton))+
geom_bar(stat = "identity", position = position_dodge())+
facet_wrap(~Class)+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))
View(fticr_data_goethite4)
fticr_data_goethite4 %>%
group_by(Fenton, O, Class) %>%
dplyr::summarize(intensity = sum(preg_rel_abund))->
fticr_data_goethite4_summary
View(fticr_data_goethite4_summary)
ggplot(fticr_data_goethite4_summary[fticr_data_goethite4_summary$Class=="Lignin"|
fticr_data_goethite4_summary$Class=="Protein"|
fticr_data_goethite4_summary$Class=="Tannin"|
fticr_data_goethite4_summary$Class=="Carb",],
aes(y = intensity, x = as.factor(O), fill = Fenton))+
geom_bar(stat = "identity", position = position_dodge())+
facet_wrap(~Class)+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))
ggplot(fticr_data_goethite4_summary[fticr_data_goethite4_summary$Class=="Lignin"|
fticr_data_goethite4_summary$Class=="Protein"|
fticr_data_goethite4_summary$Class=="Tannin"|
fticr_data_goethite4_summary$Class=="Carb",],
aes(y = intensity*100, x = as.factor(O), fill = Fenton))+
geom_bar(stat = "identity", position = position_dodge())+
facet_wrap(~Class)+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))
ggplot(fticr_data_goethite4_summary[fticr_data_goethite4_summary$Class=="Lignin"|
fticr_data_goethite4_summary$Class=="Protein"|
fticr_data_goethite4_summary$Class=="Tannin"|
fticr_data_goethite4_summary$Class=="Carb",],
aes(y = intensity*100, x = as.factor(O), fill = Fenton))+
geom_bar(stat = "identity", position = position_dodge())+
facet_wrap(~Class)+
ylab("% intensity")+
scale_x_discrete(breaks = c("0", "5","10","15","20","25","30"))
# to get median:
fticr_data_goethite4 %>%
group_by(sorption_frac, Class, O) %>%
dplyr::summarize(intensity = sum(preg_rel_abund)) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
View(median)
# to get median:
fticr_data_goethite4 %>%
group_by(Class, O) %>%
dplyr::summarize(intensity = sum(preg_rel_abund)) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
group_by(Fenton,Class, O) %>%
dplyr::summarize(intensity = sum(preg_rel_abund)) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
group_by(Fenton,O) %>%
dplyr::summarize(intensity = sum(preg_rel_abund)) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
dplyr::group_by(Fenton,Class, O) %>%
dplyr::summarize(intensity = sum(preg_rel_abund)) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
dplyr::group_by(Fenton,Class, O) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
dplyr::group_by(Fenton,Class) %>%
dplyr::summarize(intensity = sum(preg_rel_abund)) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
dplyr::group_by(Fenton,Class) %>%
dplyr::summarize(intensity = sum(preg_rel_abund),
median = median(as.numeric(O))) ->
# dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
group_by(sorption_frac, Class) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
group_by(Fenton, Class) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4_summary %>%
group_by(Fenton, Class) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
group_by(Fenton, Class) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
group_by(sorption_frac, Class) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
group_by(sorption_frac) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
median(as.numeric(fticr_fenton_loss_relabund_o$O))
fticr_data_goethite4_summary %>%
group_by(Fenton) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median2
View(median2)
fticr_data_goethite4_summary %>%
group_by(Class) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median2
fticr_data_goethite4_summary %>%
group_by(Class, Fenton) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median2
# to get median:
fticr_data_goethite4 %>%
group_by(sorption_frac, Class) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
# to get median:
fticr_data_goethite4 %>%
group_by(sorption_frac, Fenton, Class) %>%
dplyr::summarise(median = median(as.numeric(O)))->
median
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="lignin",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar()+
facet_wrap(Fenton~sorption_frac)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="lignin",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar()+
facet_grid(Fenton~sorption_frac)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar()+
facet_grid(Fenton~sorption_frac)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_grid(Fenton~sorption_frac)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Carb",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Carb",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4_summary[fticr_data_goethite4_summary$Class=="Carb",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4_summary[fticr_data_goethite4_summary$Class=="Carb",],
aes(x = as.numeric(O), y = intensity, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4_summary[fticr_data_goethite4_summary$Class=="Carb",],
aes(x = as.numeric(O), y = intensity, fill = Fenton))+
geom_bar(stat = "summary")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Carb",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "summary")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = as.numeric(O), y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "summary")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = as.numeric(N), y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "summary")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = as.numeric(N), y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = NOSC, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = C, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Carb",],
aes(x = C, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = C, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = P, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = O, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = El_comp, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = AI_mod, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = AI_O, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = Al_O, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
names(fticr_data_goethite4)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = AI_0, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
ggplot(fticr_data_goethite4[fticr_data_goethite4$Class=="Lignin",],
aes(x = O, y = preg_rel_abund, fill = Fenton))+
geom_bar(stat = "identity")+
facet_wrap(~Fenton)
fticr_data_fenton = read.csv("fticr/fticr_data_fenton.csv")
# merge files with the meta for van krevelen plots
fticr_data_fenton2 = merge(fticr_data_fenton, fticr_meta_subset,by = "Mass", all.x = T)
View(fticr_data_fenton2)
ggplot(fticr_data_fenton2, x = loss, y = O)+
geom_boxplot()
# 3.1 fenton characterization -----------
#fticr_data_fenton2
fticr_data_fenton_el = merge(fticr_data_fenton2, fticr_meta_elements, by = "Mass")
ggplot(fticr_data_fenton_el, x = loss, y = as.numeric(O))+
geom_boxplot()
View(fticr_data_fenton2)
View(fticr_data_fenton_el)
ggplot(fticr_data_fenton_el, x = loss, y = O)+
geom_point()
ggplot(fticr_data_fenton_el, aes(x = loss, y = O))+
geom_point()
ggplot(fticr_data_fenton_el, aes(x = loss, y = O))+
geom_boxplot()
ggplot(fticr_data_fenton_el, aes(x = loss, y = O))+
geom_boxplot()+
facet_wrap(~Class)
## fenton: loss/gain vs. O ----
fticr_fenton_loss_relabund_o = merge(fticr_fenton_loss_relabund, fticr_meta_elements, by = "Mass", all.x = T)
ggplot(fticr_data_fenton_el, aes(x = loss, y = Mass))+
geom_boxplot()+
facet_wrap(~Class)
ggplot(fticr_data_fenton_el, aes(x = Mass, fill = loss))+
geom_histogram()+
facet_grid(loss~Class)
ggplot(fticr_data_fenton_el, aes(x = O, fill = loss))+
geom_histogram()+
facet_grid(loss~Class)
source("0-packages.R")
fticr_porewater = read_csv("data/FTICR_INPUT_SOILPORE.csv.zip")
setwd('/Users/pate212/OneDrive - PNNL/Documents/GitHub/3soils_kp/tes_3soils_2019')
source("0-packages.R")
fticr_porewater = read_csv("data/FTICR_INPUT_SOILPORE.csv.zip")
corekey = read.csv("data/COREKEY.csv")
# 2a: remove unnecessary columns. LOTS of unnecessary columns. fml. ####
# This uses a seemingly arbitrary list that's experiment-specific. Kind of sucky
drops <- readLines("data/fticr_columns_to_drop.txt")
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
View(fticr_porewater)
# clean up sample names because WTF
# find the sample code (letter followed by 1-2 numbers)
matches <- regexec("[A-Z][0-9]{1,2}", names(fticr_porewater))
View(matches)
matches_n <- unlist(matches)
lengths <- sapply(matches, function(x) attr(x, "match.length"))
# extract the part of the name we want and change
names <- substr(names(fticr_porewater), matches_n, matches_n + lengths - 1)
names(fticr_porewater)[matches_n > 0] <- names[matches_n > 0]
names(fticr_porewater)
?regexec
fticr_porewater = read_csv("data/FTICR_INPUT_SOILPORE.csv.zip")
# 2a: remove unnecessary columns. LOTS of unnecessary columns. fml. ####
# This uses a seemingly arbitrary list that's experiment-specific. Kind of sucky
drops <- readLines("data/fticr_columns_to_drop.txt")
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
names(fticr_porewater)
lengths
matches
matches_n
?substr
?unlist
names(fticr_porewater)
# clean up sample names because WTF
# find the sample code (letter followed by 1-2 numbers)
matches <- regexec("[0-9]'-'[A-Z][0-9]{1,2}", names(fticr_porewater))
matches_n <- unlist(matches)
lengths <- sapply(matches, function(x) attr(x, "match.length"))
# extract the part of the name we want and change
names <- substr(names(fticr_porewater), matches_n, matches_n + lengths - 1)
names(fticr_porewater)[matches_n > 0] <- names[matches_n > 0]
names(fticr_porewater)
# clean up sample names because WTF
# find the sample code (letter followed by 1-2 numbers)
matches <- regexec("[0-9]-[A-Z][0-9]{1,2}", names(fticr_porewater))
matches_n <- unlist(matches)
lengths <- sapply(matches, function(x) attr(x, "match.length"))
# extract the part of the name we want and change
names <- substr(names(fticr_porewater), matches_n, matches_n + lengths - 1)
names(fticr_porewater)[matches_n > 0] <- names[matches_n > 0]
names(fticr_porewater)
pore_sample_meta = read.csv("data/FTICR_INPUT_SOILPORE_meta.csv")
names(pore_sample_meta)
pore_sample_meta %>%
filter(!Sample_Type==c("sample","as"))
source("0-packages.R")
pore_sample_meta %>%
filter(!Sample_Type==c("sample","as"))
pore_sample_meta %>%
filter(!Sample_Type==c("sample","as"))->
pore_sample_meta
pore_sample_meta %>%
filter(!Sample_Type==c("sample","as"))->
pore_sample_meta
pore_sample_meta = read.csv("data/FTICR_INPUT_SOILPORE_meta.csv")
pore_sample_meta %>%
filter(!Sample_Type==c("sample","as"))->
pore_sample_meta
pore_sample_meta %>%
filter(!Sample_Type==c("sample","as"))->
pore_sample_meta2
View(pore_sample_meta2)
View(pore_sample_meta)
pore_sample_meta = read.csv("data/FTICR_INPUT_SOILPORE_meta.csv")
pore_sample_meta %>%
filter(!Sample_Type==c("sample","as"))->
pore_sample_meta2
View(pore_sample_meta2)
pore_sample_meta %>%
filter(!Sample_Type==c(sample,as))->
pore_sample_meta2
pore_sample_meta %>%
filter(!Sample_Type=="sample")->
pore_sample_meta2
View(pore_sample_meta2)
pore_sample_meta %>%
filter(!Sample_Type=="sample") %>%
filter(!Sample_Type=="as")->
pore_sample_meta
View(pore_sample_meta)
names(pore_sample_meta)
pore_sample_meta %>%
filter(!Sample_Type=="sample") %>%
filter(!Sample_Type=="as") %>%
rename(code = X21T_CCS.2_Day8_1.C11_11Jan18_Leopard_Infuse.qb) -> # rename the fucking column
pore_sample_meta
pore_sample_meta %>%
filter(!Sample_Type=="sample") %>%
filter(!Sample_Type=="as") %>%
rename(code = `X21T_CCS.2_Day8_1.C11_11Jan18_Leopard_Infuse.qb`) -> # rename the fucking column
pore_sample_meta
pore_sample_meta %>%
filter(!Sample_Type=="sample") %>%
filter(!Sample_Type=="as") %>%
dplyr::rename(code = `X21T_CCS.2_Day8_1.C11_11Jan18_Leopard_Infuse.qb`) -> # rename the fucking column
pore_sample_meta
View(pore_sample_meta)
write.table(pore_sample_meta$code, "data/fticr_columns_to_drop2.txt")
print(pore_sample_meta$code)
write_tsv(pore_sample_meta$code, "data/fticr_columns_to_drop2.txt")
?readLines
write.csv(pore_sample_meta$code, "data/fticr_columns_to_drop2.txt")
drops <- readLines("data/fticr_columns_to_drop2.csv")
write.csv(pore_sample_meta$code, "data/fticr_columns_to_drop2.csv")
drops <- readLines("data/fticr_columns_to_drop2.csv")
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
fticr_porewater = read_csv("data/FTICR_INPUT_SOILPORE.csv.zip")
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
# clean up sample names because WTF
# find the sample code (1 number followed by hyphen followed by letter followed by 1-2 numbers)
matches <- regexec("[0-9]-[A-Z][0-9]{1,2}", names(fticr_porewater))
matches_n <- unlist(matches)
lengths <- sapply(matches, function(x) attr(x, "match.length"))
# extract the part of the name we want and change
names <- substr(names(fticr_porewater), matches_n, matches_n + lengths - 1)
names(fticr_porewater)[matches_n > 0] <- names[matches_n > 0]
names(fticr_porewater)
drops
write.table(pore_sample_meta$code, "data/fticr_columns_to_drop2.txt", row.names = FALSE)
pore_sample_meta$code
drops <- readLines("data/fticr_columns_to_drop2.txt")
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
# clean up sample names because WTF
# find the sample code (1 number followed by hyphen followed by letter followed by 1-2 numbers)
matches <- regexec("[0-9]-[A-Z][0-9]{1,2}", names(fticr_porewater))
matches_n <- unlist(matches)
lengths <- sapply(matches, function(x) attr(x, "match.length"))
# extract the part of the name we want and change
names <- substr(names(fticr_porewater), matches_n, matches_n + lengths - 1)
names(fticr_porewater)[matches_n > 0] <- names[matches_n > 0]
names(fticr_porewater)
View(pore_sample_meta)
fticr_porewater = read_csv("data/FTICR_INPUT_SOILPORE.csv.zip")
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
drops <- readLines("data/fticr_columns_to_drop.txt")
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
write.csv(pore_sample_meta$code, "data/fticr_columns_to_drop2.txt", row.names = FALSE)
write.csv(pore_sample_meta$code, "data/fticr_columns_to_drop2.csv", row.names = FALSE)
drops <- readLines("data/fticr_columns_to_drop2.csv")
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
fticr_porewater = read_csv("data/FTICR_INPUT_SOILPORE.csv.zip")
fticr_porewater2 = fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
write.csv(pore_sample_meta$code, "data/fticr_columns_to_drop2.txt", row.names = FALSE, quote = FALSE)
write.csv(pore_sample_meta$code, "data/fticr_columns_to_drop2.txt", row.names = FALSE, quote = FALSE)
drops <- readLines("data/fticr_columns_to_drop2.txt")
fticr_porewater[names(fticr_porewater) %in% drops] <- NULL
# clean up sample names because WTF
# find the sample code (1 number followed by hyphen followed by letter followed by 1-2 numbers)
matches <- regexec("[0-9]-[A-Z][0-9]{1,2}", names(fticr_porewater))
matches_n <- unlist(matches)
lengths <- sapply(matches, function(x) attr(x, "match.length"))
# extract the part of the name we want and change
names <- substr(names(fticr_porewater), matches_n, matches_n + lengths - 1)
names(fticr_porewater)[matches_n > 0] <- names[matches_n > 0]
names(fticr_porewater)
# remove addiitonal unnecessary names that couldn't be automated above
fticr_porewater %>%
select(-C13,-3use,-Error_ppm)->
fticr_porewater
# remove addiitonal unnecessary names that couldn't be automated above
fticr_porewater %>%
select(-`C13`,-`3use`,-`Error_ppm`)->
fticr_porewater
names(fticr_porewater)
source("4-fticr_pores.R")
