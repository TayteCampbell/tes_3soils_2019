geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
# scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#  scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,1000)+
facet_grid(site~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
pore_nosc %>%
mutate(treatment = factor(treatment,
levels = c("baseline","time zero saturation", "field moist","drought","saturation")))->
pore_nosc
#CPCRW
ggplot(pore_nosc[pore_nosc$site=="CPCRW" &!pore_nosc$treatment=="baseline",],
aes(x = NOSC, fill = treatment, color = treatment))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
#scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,3000)+
ggtitle("CPCRW")+
facet_grid(tension~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
#CPCRW
ggplot(pore_nosc[pore_nosc$site=="CPCRW" &!pore_nosc$treatment=="baseline",],
aes(x = NOSC, fill = treatment, color = treatment))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
#scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,1000)+
ggtitle("CPCRW")+
facet_grid(tension~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
#DWP
ggplot(pore_nosc[pore_nosc$site=="DWP" &!pore_nosc$treatment=="baseline",],
aes(x = NOSC, fill = treatment, color = treatment))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
#scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,3000)+
ggtitle("DWP")+
facet_grid(tension~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
#DWP
ggplot(pore_nosc[pore_nosc$site=="DWP" &!pore_nosc$treatment=="baseline",],
aes(x = NOSC, fill = treatment, color = treatment))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
#scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,1000)+
ggtitle("DWP")+
facet_grid(tension~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
#SR
ggplot(pore_nosc[pore_nosc$site=="SR" &!pore_nosc$treatment=="baseline",],
aes(x = NOSC, fill = treatment, color = treatment))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
#scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,1000)+
ggtitle("SR")+
facet_grid(tension~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
#SR
ggplot(pore_nosc[pore_nosc$site=="SR" &!pore_nosc$treatment=="baseline",],
aes(x = NOSC, fill = treatment, color = treatment))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
#scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,300)+
ggtitle("SR")+
facet_grid(tension~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
#DWP
ggplot(pore_nosc[pore_nosc$site=="DWP" &!pore_nosc$treatment=="baseline",],
aes(x = NOSC, fill = treatment, color = treatment))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
#scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,300)+
ggtitle("DWP")+
facet_grid(tension~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
#CPCRW
ggplot(pore_nosc[pore_nosc$site=="CPCRW" &!pore_nosc$treatment=="baseline",],
aes(x = NOSC, fill = treatment, color = treatment))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
#scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,300)+
ggtitle("CPCRW")+
facet_grid(tension~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
charac %>%
dplyr::mutate(variable = factor(variable, levels = c("TC_perc", "TN_perc", "TOC_perc", "WSOC_mg_g",
"Ca_meq100g", "Mg_meq100g",
"pH", "EC_dS_m",
"Sand_perc", "Silt_perc", "Clay_perc"))) %>%
ungroup %>%
dplyr::mutate(sp = paste(site),
val = paste(summary_hsd)) %>%
dplyr::select(variable,sp, val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
ggplot(pore,aes(x = pore_size, y=freq,color = site))+
geom_line(size = 1)+
scale_color_brewer(palette = "Set2")+
#geom_density(adjust=0.5)+
labs (y = expression (bold ("distribution, %"),
x = expression (bold ("pore size" ))))+
theme_bw()+
theme_kp()
water_retention = read_excel("data/water_retention.xlsx")
# van genuchten plots
ggplot()+
geom_line(data = water_retention,aes(x = Tension_c, y = CPCRW_water_VG, color = "CPCRW"), size=1)+
geom_line(data = water_retention,aes(x = Tension_d, y = DWP_water_VG,color = "DWP"), size=1)+
geom_line(data = water_retention,aes(x = Tension_s, y = SR_water_VG,color = "SR"), size=1)+
annotate("text", label = "DWP, fine sand", x = 25, y = 0.03,size=4,fontface="bold")+
annotate("text", label = "CPCRW, silt loam", x = 75, y = 0.13,size=4,fontface="bold")+
annotate("text", label = "SR, silty clay loam", x = 55, y = 0.3,size=4,fontface="bold")+
labs (y = expression (bold ("volumetric moisture content")),
x = expression (bold ("tension, kPa" )))+
ylim(0,0.6)+
theme_bw()+
theme_kp()+
theme (legend.position = "none")
wsoc_pore %>%
ungroup %>%
dplyr::mutate(sp = paste(Suction, Site),
val = paste(wsoc_dunnett)) %>%
select(Treatment,sp, val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
wsoc_pore %>%
ungroup %>%
dplyr::mutate(sp = paste(Suction, Site),
val = paste(wsoc_dunnett)) %>%
dplyr::select(Treatment,sp, val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
View(pore_nosc)
pore_nosc %>%
group_by(tension,site,treatment) %>%
dplyr::summarise(median = median(nosc))->
pore_nosc_median
pore_nosc %>%
group_by(tension,site,treatment) %>%
dplyr::summarise(median = median(NOSC))->
pore_nosc_median
View(pore_nosc_median)
pore_nosc_median %>%
dplyr::mutate(sp = paste(tention, treatment),
val = median) %>%
select(site,sp,val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
pore_nosc_median %>%
dplyr::mutate(sp = paste(tension, treatment),
val = median) %>%
select(site,sp,val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
pore_nosc_median %>%
dplyr::mutate(sp = paste(tension, treatment),
val = median) %>%
dplyr::select(site,sp,val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
pore_nosc_median %>%
dplyr::mutate(sp = paste(treatment),
val = median) %>%
dplyr::select(tension,site,sp,val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
soil_nosc %>%
group_by(site,treatment) %>%
dplyr::summarise(median = median(NOSC))->
soil_nosc_median
soil_nosc_median %>%
dplyr::mutate(sp = paste(treatment),
val = median) %>%
dplyr::select(site,sp,val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
pore_nosc_median %>%
dplyr::mutate(sp = paste(treatment),
val = round(median,4)) %>%
dplyr::select(tension,site,sp,val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
soil_nosc_median %>%
dplyr::mutate(sp = paste(treatment),
val = round(median,4)) %>%
dplyr::select(site,sp,val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
#CPCRW
ggplot(pore_nosc[!pore_nosc$treatment=="baseline",],
aes(x = NOSC, fill = treatment, color = treatment))+
geom_histogram(binwidth = 0.10, position = "identity", alpha = 0.2)+
#scale_fill_brewer(palette = "Dark2")+
scale_color_brewer(palette = "Dark2")+
scale_fill_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
scale_color_manual(values = c("#666666","#1B9E77", "#D95F02", "#7570B3"))+
#geom_histogram(data = subset(fticr_pore_nosc, site = "CPCRW" | treatment=="field moist"), fill = "red", alpha = 0.2)+
xlim(-2.5, 2.5)+
ylim(0,300)+
ggtitle("CPCRW")+
facet_grid(site+tension~treatment)+ #facet with two variables
theme_bw()+
theme_kp()
source("0-packages.R")
# ------------------------------------------------------- ----
# FILES ----
## use the raw-long files for relative abundance only
## use the long files for peaks
soil_meta = read.csv(FTICR_SOIL_META)# <- "fticr/fticr_soil_meta.csv"
#FTICR_SOIL_META_HCOC <- "fticr/soil_meta_hcoc.csv"
soil_raw_long = read.csv(FTICR_SOIL_RAW_LONG)# <- "fticr/fticr_soil_raw_longform.csv"
soil_long = read.csv(FTICR_SOIL_LONG)# <- "fticr/fticr_soil_longform.csv"
pore_meta = read.csv(FTICR_PORE_META)# <- "fticr/fticr_pore_meta.csv"
pore_long = read.csv(FTICR_PORE_LONG)# <- "fticr/fticr_pore_longform.csv"
pore_raw_long = read.csv(FTICR_PORE_RAW_LONG)# <- "fticr/fticr_pore_raw_longform.csv"
View(pore_raw_long)
names(pore_raw_long)
# PART V: SHANNON DIVERSITY ----
pore_raw_long %>%
group_by(tension,site,treatment, Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = ln(p),
p_logp = p*log) ->shannon
?log
# PART V: SHANNON DIVERSITY ----
pore_raw_long %>%
group_by(tension,site,treatment, Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = log(p),
p_logp = p*log) ->shannon
View(shannon)
# PART V: SHANNON DIVERSITY ----
pore_raw_long %>%
group_by(tension,site,treatment, Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = log(p),
p_logp = p*log,
_H = sum(p_logp),
H = (-1*H)) ->shannon
# PART V: SHANNON DIVERSITY ----
pore_raw_long %>%
group_by(tension,site,treatment, Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = log(p),
p_logp = p*log,
_H = sum(p_logp),
H = -1*H) ->shannon
# PART V: SHANNON DIVERSITY ----
pore_raw_long %>%
group_by(tension,site,treatment, Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = log(p),
p_logp = p*log,
H1 = sum(p_logp),
H2 = -1*H1) ->shannon
View(shannon)
# PART V: SHANNON DIVERSITY ----
pore_raw_long %>%
group_by(tension,site,treatment, core,Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment,core) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = log(p),
p_logp = p*log,
H1 = sum(p_logp),
H2 = -1*H1) ->shannon
# PART V: SHANNON DIVERSITY ----
pore_raw_long %>%
group_by(tension,site,treatment, core,Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment,core) %>%
dplyr::summarize(total = sum(n)) %>%
dplyr::mutate(p = n/total,
log = log(p),
p_logp = p*log,
H1 = sum(p_logp),
H2 = -1*H1) ->shannon
# PART V: SHANNON DIVERSITY ----
pore_raw_long %>%
group_by(tension,site,treatment, core,Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment,core) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = log(p),
p_logp = p*log,
H1 = sum(p_logp),
H2 = -1*H1) ->shannon
## step 1: load the files ----
# data are split into (a) metadata and (b) sample data
# read_csv reads the zipped files without extracting
fticr_soil_meta = read_csv("data/FTICR_INPUT_SOIL_META.csv.zip")
View(fticr_soil_meta)
# PART V: SHANNON DIVERSITY ----
# Shannon diversity, H = - sum [p*ln(p)], where n = no. of individuals per species/total number of individuals
pore_raw_long %>%
group_by(tension,site,treatment, core,Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment,core) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = log(p),
p_logp = p*log) %>%
dply::dummarize(H1 = sum(p_logp),
H2 = -1*H1) ->shannon
# PART V: SHANNON DIVERSITY ----
# Shannon diversity, H = - sum [p*ln(p)], where n = no. of individuals per species/total number of individuals
pore_raw_long %>%
group_by(tension,site,treatment, core,Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment,core) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = log(p),
p_logp = p*log) %>%
dplyr::dummarize(H1 = sum(p_logp),
H2 = -1*H1) ->shannon
# PART V: SHANNON DIVERSITY ----
# Shannon diversity, H = - sum [p*ln(p)], where n = no. of individuals per species/total number of individuals
pore_raw_long %>%
group_by(tension,site,treatment, core,Class) %>%
dplyr::summarize(n = n()) %>%
ungroup %>%
group_by(tension,site,treatment,core) %>%
dplyr::mutate(total = sum(n),
p = n/total,
log = log(p),
p_logp = p*log) %>%
dplyr::summarize(H1 = sum(p_logp),
H2 = -1*H1) ->shannon
ggplot(shannon, aes(x = treatment, y = H2, color = treatment, fill = treatment))+
geom_point()+
geom_boxplot()+
facet_grid(tension~site)
ggplot(shannon, aes(x = treatment, y = H2, color = treatment))+
geom_point()+
geom_boxplot()+
facet_grid(tension~site)
ggplot(shannon, aes(x = treatment, y = H2, color = treatment))+
geom_point()+
geom_boxplot()+
facet_wrap(~site)
ggplot(shannon, aes(x = treatment, y = H2, color = treatment))+
geom_point()+
geom_boxplot(fill = none)+
facet_wrap(~site)
ggplot(shannon, aes(x = treatment, y = H2, color = treatment))+
geom_point()+
geom_boxplot(fill = "none")+
facet_wrap(~site)
ggplot(shannon, aes(x = treatment, y = H2, color = treatment))+
geom_boxplot()+
geom_point()+
facet_wrap(~site)
View(pore_long)
View(soil_long)
source("0-packages.R")
# Note that "registration by key is the safest, long-run strategy"
# https://cran.r-project.org/web/packages/googlesheets/vignettes/basic-usage.html
KEY <- "1wsI3tldbhhMDSDoRejmS2jE2c9U-75sht_Dyum3QUBY"
valvemap <- gs_key(KEY)
print(valvemap)
# Note that "registration by key is the safest, long-run strategy"
# https://cran.r-project.org/web/packages/googlesheets/vignettes/basic-usage.html
KEY <- "1wsI3tldbhhMDSDoRejmS2jE2c9U-75sht_Dyum3QUBY"
valvemap <- gs_key(KEY)
key <- "1U5pw1kaEX5qWdW57FzQFXCFb0XrKqNLyztHhbtpgk-U"
valvemap <- gs_key(key)
do_download <- function(filelist, depth = 1) {
for(f in seq_len(nrow(filelist))) {
cat(depth, filelist$name[f], "\t")
if(is_folder(filelist[f,])) {
cat("folder\n")
do_download(drive_ls(as_id(filelist$id[f])), depth + 1)
} else {
localfile <- file.path("data/picarro/", filelist$name[f])
if(file.exists(localfile)) {
cat("already exists\n")
} else {
cat("downloading", filelist$name[f], "\n")
drive_download(filelist[f,], path = localfile)
}
}
}
}
suppressWarnings(do_download(filelist))
printlog("Getting list of Picarro files...")
folder_id <- as_id()
filelist <- drive_ls("~/3Soils_Picarro/")
?drive_ls
??drive_ls
library(googlesheets) # 0.2.2
library(googledrive)
folder_id <- as_id()
filelist <- drive_ls("~/3Soils_Picarro/")
do_download <- function(filelist, depth = 1) {
for(f in seq_len(nrow(filelist))) {
cat(depth, filelist$name[f], "\t")
if(is_folder(filelist[f,])) {
cat("folder\n")
do_download(drive_ls(as_id(filelist$id[f])), depth + 1)
} else {
localfile <- file.path("data/picarro/", filelist$name[f])
if(file.exists(localfile)) {
cat("already exists\n")
} else {
cat("downloading", filelist$name[f], "\n")
drive_download(filelist[f,], path = localfile)
}
}
}
}
suppressWarnings(do_download(filelist))
# Note that "registration by key is the safest, long-run strategy"
# https://cran.r-project.org/web/packages/googlesheets/vignettes/basic-usage.html
KEY <- "1wsI3tldbhhMDSDoRejmS2jE2c9U-75sht_Dyum3QUBY"
valvemap <- gs_key(KEY)
print(valvemap)
valvemap <- gs_key(KEY)
key <- "1U5pw1kaEX5qWdW57FzQFXCFb0XrKqNLyztHhbtpgk-U"
valvemap <- gs_key(key)
valvemap <- gs_read_listfeed(key)
??gs_read_listfeed
?gs_read_listfeed
?gs_key
vmdata <- list()
tf <- tempfile(fileext = ".csv")
sheet <- "valve_map"
printlog("Downloading", sheet)
valvemap %>%
gs_download(ws = sheet, to = tf, overwrite = TRUE)
valvemap <- gs_read_listfeed(key)
valvemap %>%
do_download(ws = sheet, to = tf, overwrite = TRUE)
key = read.csv("moisture/3Soils_CPCRW_SR_DWP_PicarroLog - sampleID_key")
