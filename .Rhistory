gather(variable, value, 2:12)->
soil_character2_long
View(soil_character2_long)
# gather
soil_character2 %>%
gather(variable, value, 2:12) %>%
mutate(value = round(value,3))->
soil_character2_long
# gather
soil_character2 %>%
gather(variable, value, 2:12) %>%
mutate(value = round(value,2))->
soil_character2_long
soil_character2_long %>%
group_by(site, variable) %>%
dplyr::summarise(se = sd(value)/sqrt(n()))->
soil_character_summary
View(soil_character_summary)
soil_character2_long %>%
group_by(site, variable) %>%
dplyr::summarise(sd = sd(value),
n = n(),
se = sd(value)/sqrt(n()))->
soil_character_summary
# gather
soil_character2 %>%
gather(variable, value, 2:12) %>%
mutate(value = round(value,2)) %>%
drop_na()->
soil_character2_long
soil_character2_long %>%
group_by(site, variable) %>%
dplyr::summarise(sd = sd(value),
n = n(),
se = sd(value)/sqrt(n()))->
soil_character_summary
soil_character2_long %>%
group_by(site, variable) %>%
dplyr::summarise(mean = mean(value),
sd = sd(value),
n = n(),
se = sd(value)/sqrt(n()))->
soil_character_summary
soil_character2_long %>%
group_by(site, variable) %>%
dplyr::summarise(mean = mean(value),
se = sd(value)/sqrt(n())) %>%
dplyr::mutate(summary = paste(round(mean,2), "\u00B1",round(se,2)))->
soil_character_summary
# gather
soil_character2 %>%
gather(variable, value, 2:12) %>%
mutate(value = round(value,2)) %>%
mutate(variable = factor(variable, levels = c("TC_perc", "TN_perc", "TOC_perc", "WSOC_mg_g",
"Ca_meq100g", "Mg_meq100g",
"pH", "EC_dS_m",
"Sand_perc", "Silt_perc", "Clay_perc"))) %>%
drop_na()->
soil_character2_long
soil_character2_long %>%
group_by(site, variable) %>%
dplyr::summarise(mean = mean(value),
se = sd(value)/sqrt(n())) %>%
dplyr::mutate(summary = paste(round(mean,2), "\u00B1",round(se,2)))->
soil_character_summary
a <-aov(value ~ site, data = soil_character2_long)
h <-HSD.test(a,"site")
h
tibble(`SR` = h$groups["SR",2],
`CCPRW` = h$groups["CPCRW",2],
`DWP` = h$groups["DWP",2])
soil_character2_long %>%
group_by(variable) %>%
do(fit_hsd(.))  ->
soil_charac_hsd
fit_hsd <- function(dat) {
a <-aov(value ~ site, data = dat)
h <-HSD.test(a,"site")
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`SR` = h$groups["SR",2],
`CCPRW` = h$groups["CPCRW",2],
`DWP` = h$groups["DWP",2])
}
soil_character2_long %>%
group_by(variable) %>%
do(fit_hsd(.))  ->
soil_charac_hsd
View(soil_charac_hsd)
fit_hsd <- function(dat) {
a <-aov(value ~ site, data = dat)
h <-HSD.test(a,"site")
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`SR` = h$groups["SR",2],
`CPCRW` = h$groups["CPCRW",2],
`DWP` = h$groups["DWP",2])
}
soil_character2_long %>%
group_by(variable) %>%
do(fit_hsd(.))  ->
soil_charac_hsd
soil_charac_hsd %>%
gather(treatment, hsd, 2:4)-> #gather columns 4-7 (treatment levels)
soil_charac_hsd2
# merge `summary` and `hsd`
soil_character_summary2 = merge(soil_character_summary, soil_charac_hsd2, by = "site, variable")
# merge `summary` and `hsd`
soil_character_summary2 = merge(soil_character_summary, soil_charac_hsd2, by = c("site, variable"))
View(soil_character_summary)
View(soil_charac_hsd2)
soil_charac_hsd %>%
gather(site, hsd, 2:4)-> #gather columns 4-7 (treatment levels)
soil_charac_hsd2
# merge `summary` and `hsd`
soil_character_summary2 = merge(soil_character_summary, soil_charac_hsd2, by = c("site, variable"))
soil_character2_long %>%
group_by(site, variable) %>%
dplyr::summarise(mean = mean(value),
se = sd(value)/sqrt(n())) %>%
dplyr::mutate(summary = paste(round(mean,2), "\u00B1",round(se,2)))->
soil_character_summary
fit_hsd <- function(dat) {
a <-aov(value ~ site, data = dat)
h <-HSD.test(a,"site")
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`SR` = h$groups["SR",2],
`CPCRW` = h$groups["CPCRW",2],
`DWP` = h$groups["DWP",2])
}
soil_character2_long %>%
group_by(variable) %>%
do(fit_hsd(.))  ->
soil_charac_hsd
soil_charac_hsd %>%
gather(site, hsd, 2:4)-> #gather columns 4-7 (treatment levels)
soil_charac_hsd2
# merge `summary` and `hsd`
soil_character_summary2 = merge(soil_character_summary, soil_charac_hsd2, by = c("site, variable"))
# merge `summary` and `hsd`
soil_character_summary2 = merge(soil_character_summary, soil_charac_hsd2, by = c("site", "variable"))
View(soil_character_summary2)
soil_character_summary2 %>%
mutate(summary_hsd = paste(summary," ",hsd))->
soil_character_summary2
soil_character_summary2 %>%
mutate(summary_hsd = paste(summary," ",hsd))->
soil_character_summary2 %>%
select(-hsd)->
soil_character_summary2
soil_character_summary2 %>%
mutate(summary_hsd = paste(summary," ",hsd)) %>%
select(-hsd)->
soil_character_summary2
## CREATE OUTPUT FILES
# CHARACTERIZATION
CHARACTERIZATION <- "processed/soil_characterization.csv"
### OUTPUT
write.csv(soil_character_summary2, CHARACTERIZATION)
# input files
#   CHARAC
charac = read.csv(CHARACTERIZATION)# <- "processed/soil_characterization.csv"
charac %>%
ungroup %>%
dplyr::mutate(sp = paste(site),
val = paste(summary_hsd)) %>%
select(variable,sp, val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
charac %>%
mutate(variable = factor(variable, levels = c("TC_perc", "TN_perc", "TOC_perc", "WSOC_mg_g",
"Ca_meq100g", "Mg_meq100g",
"pH", "EC_dS_m",
"Sand_perc", "Silt_perc", "Clay_perc"))) %>%
ungroup %>%
dplyr::mutate(sp = paste(site),
val = paste(summary_hsd)) %>%
select(variable,sp, val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
PORE_DISTRIBUTION <- "processed/pore_distribution.csv"
pores = read_excel("data/pore_size.xlsx")
names(pores)
#creating frequency distribution tables for each site
cpcrw_pore_scores = pores$CPCRW
dwp_pore_scores = pores$DWP
sr_pore_scores = pores$SR
bins = seq(0,4000, by = 50)
cpcrw_scores = cut(cpcrw_pore_scores,bins)
dwp_scores = cut(dwp_pore_scores,bins)
sr_scores = cut(sr_pore_scores,bins)
freq_cpcrw = transform(table(cpcrw_scores))
c = transform(freq_cpcrw,Cum_Freq=cumsum(Freq),Perc_Freq = prop.table(Freq)*100)
c$scores = seq(50,4000,by = 50)
freq_dwp = transform(table(dwp_scores))
d = transform(freq_dwp,Cum_Freq=cumsum(Freq),Perc_Freq = prop.table(Freq)*100)
d$scores = seq(50,4000,by = 50)
freq_sr = transform(table(sr_scores))
s = transform(freq_sr,Cum_Freq=cumsum(Freq),Perc_Freq = prop.table(Freq)*100)
s$scores = seq(50,4000,by = 50)
#combining the three sites, two at a time
#the file contains frequency, cum freq, and % frequency
combined_pore_freq = merge(c,d,by = "scores")
combined_pore_freq = merge(combined_pore_freq,s,by = "scores")
names(combined_pore_freq)
# extracting only the % frequency columns and saving as a new file
combined_pore_perc_freq = data.frame(combined_pore_freq$scores,
combined_pore_freq$Perc_Freq.x,
combined_pore_freq$Perc_Freq.y,
combined_pore_freq$Perc_Freq)
names(combined_pore_perc_freq) = c("pore_size","cpcrw","dwp","sr")
write.csv(combined_pore_perc_freq,"pore_size_perc_freq2.csv")
#melting the three sites into a single column
pores_melt = melt(combined_pore_perc_freq,id = "pore_size")
names(pores_melt) = c("pore_size","site","freq")
###OUTPUT
write.csv(pores_melt,PORE_DISTRIBUTION)
pore = read.csv(PORE_DISTRIBUTION)# <- "processed/pore_distribution.csv"
ggplot(pore,aes(x = pore_size, y=freq,color = site))+
geom_line(size = 1)+
#geom_density(adjust=0.5)+
labs (y = expression (bold ("distribution, %"),
x = expression (bold ("pore size" ))))+
theme_bw()+
theme_kp()
ggplot(pore,aes(x = pore_size, y=freq,color = site))+
geom_line(size = 1)+
scale_color_brewer(palette = "Set2")+
#geom_density(adjust=0.5)+
labs (y = expression (bold ("distribution, %"),
x = expression (bold ("pore size" ))))+
theme_bw()+
theme_kp()
# van genuchten plots
gg_water_retention_vg = ggplot()+
geom_line(data = water_retention,aes(x = Tension_c, y = CPCRW_water_VG, color = "CPCRW"), size=1)+
geom_line(data = water_retention,aes(x = Tension_d, y = DWP_water_VG,color = "DWP"), size=1)+
geom_line(data = water_retention,aes(x = Tension_s, y = SR_water_VG,color = "SR"), size=1)+
# geom_point(data = water_retention,aes(x = Tension_c, y = CPCRW_water_measured))+
# geom_point(data = water_retention,aes(x = Tension_d, y = DWP_water_measured))+
# geom_point(data = water_retention,aes(x = Tension_s, y = SR_water_measured))
annotate("text", label = "DWP, fine sand", x = 25, y = 0.03,size=4,fontface="bold")+
annotate("text", label = "CPCRW, silt loam", x = 75, y = 0.13,size=4,fontface="bold")+
annotate("text", label = "SR, silty clay loam", x = 55, y = 0.3,size=4,fontface="bold")+
labs (y = expression (bold ("volumetric moisture content"),
x = expression (bold ("tension, kPa" ))))+
ylim(0,0.7)+
theme_bw()+
theme (legend.position = "none")+
theme (legend.key = element_rect(size = 3))+
theme (legend.title = element_blank())+
theme (legend.text=element_text(size=12))+
theme (legend.key = element_rect(size = 2),
legend.key.size = unit(2, 'lines'))+
#  ggtitle ("water retention curves: Van Genuchten")+
theme (plot.title = element_text(hjust = 0.05,size = 14))+
theme (axis.text=element_text(size=14,face="bold",color="black"),
axis.title=element_text(size=14,face="bold",color="black")); gg_water_retention_vg
## 4. water retention curves ----
water_retention = read_excel("data/water_retention.xlsx")
names(water_retention)
attach(water_retention)
# van genuchten plots
gg_water_retention_vg = ggplot()+
geom_line(data = water_retention,aes(x = Tension_c, y = CPCRW_water_VG, color = "CPCRW"), size=1)+
geom_line(data = water_retention,aes(x = Tension_d, y = DWP_water_VG,color = "DWP"), size=1)+
geom_line(data = water_retention,aes(x = Tension_s, y = SR_water_VG,color = "SR"), size=1)+
# geom_point(data = water_retention,aes(x = Tension_c, y = CPCRW_water_measured))+
# geom_point(data = water_retention,aes(x = Tension_d, y = DWP_water_measured))+
# geom_point(data = water_retention,aes(x = Tension_s, y = SR_water_measured))
annotate("text", label = "DWP, fine sand", x = 25, y = 0.03,size=4,fontface="bold")+
annotate("text", label = "CPCRW, silt loam", x = 75, y = 0.13,size=4,fontface="bold")+
annotate("text", label = "SR, silty clay loam", x = 55, y = 0.3,size=4,fontface="bold")+
labs (y = expression (bold ("volumetric moisture content"),
x = expression (bold ("tension, kPa" ))))+
ylim(0,0.7)+
theme_bw()+
theme (legend.position = "none")+
theme (legend.key = element_rect(size = 3))+
theme (legend.title = element_blank())+
theme (legend.text=element_text(size=12))+
theme (legend.key = element_rect(size = 2),
legend.key.size = unit(2, 'lines'))+
#  ggtitle ("water retention curves: Van Genuchten")+
theme (plot.title = element_text(hjust = 0.05,size = 14))+
theme (axis.text=element_text(size=14,face="bold",color="black"),
axis.title=element_text(size=14,face="bold",color="black")); gg_water_retention_vg
View(water_retention)
water_retention = read_excel("data/water_retention.xlsx")
# van genuchten plots
ggplot()+
geom_line(data = water_retention,aes(x = Tension_c, y = CPCRW_water_VG, color = "CPCRW"), size=1)+
geom_line(data = water_retention,aes(x = Tension_d, y = DWP_water_VG,color = "DWP"), size=1)+
geom_line(data = water_retention,aes(x = Tension_s, y = SR_water_VG,color = "SR"), size=1)+
annotate("text", label = "DWP, fine sand", x = 25, y = 0.03,size=4,fontface="bold")+
annotate("text", label = "CPCRW, silt loam", x = 75, y = 0.13,size=4,fontface="bold")+
annotate("text", label = "SR, silty clay loam", x = 55, y = 0.3,size=4,fontface="bold")+
labs (y = expression (bold ("volumetric moisture content"),
x = expression (bold ("tension, kPa" ))))+
ylim(0,0.7)+
theme_bw()+
theme_kp()+
theme (legend.position = "none")
water_retention = read_excel("data/water_retention.xlsx")
# van genuchten plots
ggplot()+
geom_line(data = water_retention,aes(x = Tension_c, y = CPCRW_water_VG, color = "CPCRW"), size=1)+
geom_line(data = water_retention,aes(x = Tension_d, y = DWP_water_VG,color = "DWP"), size=1)+
geom_line(data = water_retention,aes(x = Tension_s, y = SR_water_VG,color = "SR"), size=1)+
annotate("text", label = "DWP, fine sand", x = 25, y = 0.03,size=4,fontface="bold")+
annotate("text", label = "CPCRW, silt loam", x = 75, y = 0.13,size=4,fontface="bold")+
annotate("text", label = "SR, silty clay loam", x = 55, y = 0.3,size=4,fontface="bold")+
labs (y = expression (bold ("volumetric moisture content"),
x = expression (bold ("tension, kPa" ))))+
ylim(0,0.7)+
theme_bw()+
theme_kp()+
theme (legend.position = "none")
water_retention = read_excel("data/water_retention.xlsx")
# van genuchten plots
ggplot()+
geom_line(data = water_retention,aes(x = Tension_c, y = CPCRW_water_VG, color = "CPCRW"), size=1)+
geom_line(data = water_retention,aes(x = Tension_d, y = DWP_water_VG,color = "DWP"), size=1)+
geom_line(data = water_retention,aes(x = Tension_s, y = SR_water_VG,color = "SR"), size=1)+
annotate("text", label = "DWP, fine sand", x = 25, y = 0.03,size=4,fontface="bold")+
annotate("text", label = "CPCRW, silt loam", x = 75, y = 0.13,size=4,fontface="bold")+
annotate("text", label = "SR, silty clay loam", x = 55, y = 0.3,size=4,fontface="bold")+
labs (y = expression (bold ("volumetric moisture content"),
x = expression (bold ("tension, kPa" ))))+
ylim(0,0.6)+
theme_bw()+
theme_kp()+
theme (legend.position = "none")
water_retention = read_excel("data/water_retention.xlsx")
# van genuchten plots
ggplot()+
geom_line(data = water_retention,aes(x = Tension_c, y = CPCRW_water_VG, color = "CPCRW"), size=1)+
geom_line(data = water_retention,aes(x = Tension_d, y = DWP_water_VG,color = "DWP"), size=1)+
geom_line(data = water_retention,aes(x = Tension_s, y = SR_water_VG,color = "SR"), size=1)+
annotate("text", label = "DWP, fine sand", x = 25, y = 0.03,size=4,fontface="bold")+
annotate("text", label = "CPCRW, silt loam", x = 75, y = 0.13,size=4,fontface="bold")+
annotate("text", label = "SR, silty clay loam", x = 55, y = 0.3,size=4,fontface="bold")+
labs (y = expression (bold ("volumetric moisture content"),
x = expression (bold ("tension, kPa" ))))+
xlab("kPa")+
ylim(0,0.6)+
theme_bw()+
theme_kp()+
theme (legend.position = "none")
water_retention = read_excel("data/water_retention.xlsx")
# van genuchten plots
ggplot()+
geom_line(data = water_retention,aes(x = Tension_c, y = CPCRW_water_VG, color = "CPCRW"), size=1)+
geom_line(data = water_retention,aes(x = Tension_d, y = DWP_water_VG,color = "DWP"), size=1)+
geom_line(data = water_retention,aes(x = Tension_s, y = SR_water_VG,color = "SR"), size=1)+
annotate("text", label = "DWP, fine sand", x = 25, y = 0.03,size=4,fontface="bold")+
annotate("text", label = "CPCRW, silt loam", x = 75, y = 0.13,size=4,fontface="bold")+
annotate("text", label = "SR, silty clay loam", x = 55, y = 0.3,size=4,fontface="bold")+
labs (y = expression (bold ("volumetric moisture content")),
x = expression (bold ("tension, kPa" )))+
ylim(0,0.6)+
theme_bw()+
theme_kp()+
theme (legend.position = "none")
source("0-packages.R")
source("1-characterization.R")
source("2-wsoc.R")
source("3-fticr_soil_NEW.R")
source("4-fticr_pores.R")
write.csv(combined_pore_perc_freq,"processed/pore_size_perc_freq2.csv")
source("0-packages.R")
# input files
#   CHARAC
charac = read.csv(CHARACTERIZATION)# <- "processed/soil_characterization.csv"
pore = read.csv(PORE_DISTRIBUTION)# <- "processed/pore_distribution.csv"
# WSOC
wsoc_pore = read.csv(WSOC_PORE)# <- "processed/wsoc_pore_summary.csv"
wsoc_soil = read.csv(WSOC_SOIL)# <- "processed/wsoc_soils_summary.csv"
# FTICR_PORE
pore_aromatic = read.csv(FTICR_PORE_AROMATIC)# <- "fticr/fticr_pore_aromatic_counts.csv"
pore_meta = read.csv(FTICR_PORE_META)# <- "fticr/fticr_pore_meta.csv"
pore_long = read.csv(FTICR_PORE_LONG)# <- "fticr/fticr_pore_longform.csv"
pore_relabund = read.csv(FTICR_PORE_RELABUND)# <- "fticr/fticr_pore_relabundance_groups2_hsd.csv"
pore_peaks = read.csv(FTICR_PORE_PEAKS)# <- "fticr/fticr_pore_peakscount.csv"
pore_unique = read.csv(FTICR_PORE_UNIQUE)# <- "fticr/fticr_pore_uniquemolecules.csv"
pore_unique_peaks = read.csv(FTICR_PORE_UNIQUE_PEAKS)# <- "fticr/fticr_pore_unique_peakscount.csv"
pore_hcoc = read.csv(FTICR_PORE_HCOC)# <- "fticr/fticr_pore_hcoc.csv"
pore_nosc = read.csv(FTICR_PORE_NOSC)# <- "fticr/fticr_pore_nosc.csv"
#FTICR_SOIL
soil_aromatic = read.csv(FTICR_SOIL_AROMATIC)# <- "fticr/fticr_soil_aromatic_counts.csv"
soil_nosc = read.csv(FTICR_SOIL_NOSC)# <- "fticr/fticr_soil_nosc.csv"
soil_hcoc = read.csv(FTICR_SOIL_HCOC)# <- "fticr/fticr_soil_hcoc.csv"
soil_unique = read.csv(FTICR_SOIL_UNIQUE)# <- "fticr/fticr_soil_uniquemolecules.csv"
source("0-packages.R")
fticr_soil_meta = read_csv("data/FTICR_INPUT_SOIL_META.csv.zip")
fticr_soil_data = read_csv("data/FTICR_INPUT_SOIL_DATA.csv.zip")
corekey = read.csv("data/COREKEY.csv")
fticr_soil_meta = fticr_soil_meta[,!colnames(fticr_soil_meta)%in%
c("C13","Error_ppm", "Candidates", "GFE", "bs1_class","bs2_class")]
fticr_soil_meta %>%
dplyr::rename(OC = OtoC_ratio,
HC = HtoC_ratio)->
fticr_soil_meta
## make a subset for just HCOC
fticr_soil_meta %>%
select(Mass, HC, OC)->
fticr_meta_hcoc
fticr_soil %>%
# remove "unassigned" molecules
filter(!Class=="Unassigned") %>%
# melt/gather. transform from wide to long form
gather(core, intensity, C1:S25) %>% ## core = name of new categ column, intensity = name of values column, C1:C25 are columns that are collapsed
# remove all samples with zero intensity
filter(!intensity=="0") -> temp
names(fticr_soil_data)
## make a subset for just HCOC
fticr_soil_meta %>%
select(Mass, Class, HC, OC)->
fticr_meta_hcoc
fticr_soil_data %>%
# melt/gather. transform from wide to long form
gather(core, intensity, C1:S25) %>% ## core = name of new categ column, intensity = name of values column, C1:C25 are columns that are collapsed
# remove all samples with zero intensity
filter(!intensity=="0") %>%
# merge with the core key file
leftjoin(corekey,by = "core") %>%
## now we need to filter only those peaks seen in 3 or more replicates
# create a summary table with replicates
group_by(Mass,treatment,site) %>%
dplyr::summarize(reps = n()) %>%
# remove peaks seen in < 3 replicates
filter(reps>2) %>%
# merge with hcoc file
left_join(fticr_meta_hcoc, by = "Mass") %>%
# remove "unassigned" molecules
filter(!Class=="Unassigned")  ->
fticr_soil_gather2
source("0-packages.R")
fticr_soil_data %>%
# melt/gather. transform from wide to long form
gather(core, intensity, C1:S25) %>% ## core = name of new categ column, intensity = name of values column, C1:C25 are columns that are collapsed
# remove all samples with zero intensity
filter(!intensity=="0") %>%
# merge with the core key file
leftjoin(corekey,by = "core") %>%
## now we need to filter only those peaks seen in 3 or more replicates
# create a summary table with replicates
group_by(Mass,treatment,site) %>%
dplyr::summarize(reps = n()) %>%
# remove peaks seen in < 3 replicates
filter(reps>2) %>%
# merge with hcoc file
left_join(fticr_meta_hcoc, by = "Mass") %>%
# remove "unassigned" molecules
filter(!Class=="Unassigned")  ->
fticr_soil_gather2
fticr_soil_data %>%
# melt/gather. transform from wide to long form
gather(core, intensity, C1:S25) %>% ## core = name of new categ column, intensity = name of values column, C1:C25 are columns that are collapsed
# remove all samples with zero intensity
filter(!intensity=="0") %>%
# merge with the core key file
leftjoin(corekey,by = "core") %>%
## now we need to filter only those peaks seen in 3 or more replicates
# create a summary table with replicates
group_by(Mass,treatment,site) %>%
dplyr::summarize(reps = n()) %>%
# remove peaks seen in < 3 replicates
filter(reps>2) %>%
# merge with hcoc file
dplyr::left_join(fticr_meta_hcoc, by = "Mass") %>%
# remove "unassigned" molecules
filter(!Class=="Unassigned")  ->
fticr_soil_gather2
fticr_soil_data %>%
# melt/gather. transform from wide to long form
gather(core, intensity, C1:S25) %>% ## core = name of new categ column, intensity = name of values column, C1:C25 are columns that are collapsed
# remove all samples with zero intensity
filter(!intensity=="0") %>%
# merge with the core key file
left_join(corekey,by = "core") %>%
## now we need to filter only those peaks seen in 3 or more replicates
# create a summary table with replicates
group_by(Mass,treatment,site) %>%
dplyr::summarize(reps = n()) %>%
# remove peaks seen in < 3 replicates
filter(reps>2) %>%
# merge with hcoc file
eft_join(fticr_meta_hcoc, by = "Mass") %>%
# remove "unassigned" molecules
filter(!Class=="Unassigned")  ->
fticr_soil_gather2
fticr_soil_data %>%
# melt/gather. transform from wide to long form
gather(core, intensity, C1:S25) %>% ## core = name of new categ column, intensity = name of values column, C1:C25 are columns that are collapsed
# remove all samples with zero intensity
filter(!intensity=="0") %>%
# merge with the core key file
left_join(corekey,by = "core") %>%
## now we need to filter only those peaks seen in 3 or more replicates
# create a summary table with replicates
group_by(Mass,treatment,site) %>%
dplyr::summarize(reps = n()) %>%
# remove peaks seen in < 3 replicates
filter(reps>2) %>%
# merge with hcoc file
left_join(fticr_meta_hcoc, by = "Mass") %>%
# remove "unassigned" molecules
filter(!Class=="Unassigned")  ->
fticr_soil_gather2
View(fticr_soil_gather2)
