h
anova(lme(relabund ~ treatment, random = ~1|core, data = fticr_pore_relabundance_long))
h$groups
h$groups[1]
h$groups[2]
h$groups[2,1]
h$groups[2,2]
tibble(h$groups[2])
tibble(h$groups)
tibble(hsd = h$groups)
tibble(hsd = h$groups[2])
tibble(hsd = h$groups[2] %>% dcast(hsd))
tibble(hsd = h$groups[2]) %>% dcast(hsd)
# trying option 3 for TukeyHSD
fit_mod_hsd <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a)
tibble(hsd = h$groups[2] %>% dcast(hsd))
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_mod_hsd(.))  ->
option3_hsd
tibble(hsd = h$groups[2])
# trying option 3 for TukeyHSD
fit_mod_hsd <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a)
tibble(hsd = h$groups[2])
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_mod_hsd(.))  ->
option3_hsd
ano = anova(lme(relabund ~ treatment, random = ~1|core, data = fticr_pore_relabundance_long))
ano$`F-value`[2
ano$`F-value`[2]
round(ano$`p-value`[2],4)
t = tibble(hsd = h$groups[2])
t %>% dcast(h)
t
t = data_frame(hsd = h$groups[2])
t = data.frame(hsd = h$groups[2])
t
names(t)
t[2,1]
t[1,1]
t[1,3]
View(t)
t %>% dcast(groups)
t = tibble(hsd = h$groups[2],
trt = c("drought","saturation","time zero saturation","field moist"))
t
t %>% dcast(trt~groups)
t %>% dcast(trt, value.var = "groups")
t %>% dcast(groups, value.var = "groups")
View(t)
t %>% dcast(trt, value.var = "groups")
t = tibble(hsd = h$groups[2],
treat = c("drought","saturation","time zero saturation","field moist"))
t %>% dcast(treat, value.var = "groups")
t %>% dcast(treat, value.var = "groups")
t %>%
dcast(treat, value.var = "groups")
t %>%
dcast(treat, value.var = "groups")  ->
t2
t %>%
dcast(~treat, value.var = "groups")  ->
t2
# trying option 3 for TukeyHSD
fit_mod_hsd <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a)
tibble(hsd = h$groups[2],
treat = c("drought","saturation","time zero saturation","field moist"))
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_mod_hsd(.))  ->
option3_hsd
#option 3
# this works
# does lme of rel_abund ~ treatment for each site/tension/group
fit_mod <- function(dat) {
ano <-anova(lme(relabund ~ treatment, random = ~1|core, data = dat))
tibble(F = ano$`F-value`[2], P = round(ano$`p-value`[2],4))
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_mod(.))  ->
option3
View(option3)
h$groups[2,1]
h$groups[2,2]
tibble(drt = h$groups[1,2],
sat = h$groups[2,2],
tzsat = h$groups[3,2],
fm = h$groups[4,2])
# trying option 3 for TukeyHSD
fit_mod_hsd <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a)
tibble(drt = h$groups[1,2],
sat = h$groups[2,2],
tzsat = h$groups[3,2],
fm = h$groups[4,2])
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_mod_hsd(.))  ->
option3_hsd
fticr_pore_relabundance_long%>%
group_by(site, tension, group) %>%
do(fit_mod_hsd(.))  ->
option3_hsd
rm(t)
rm(h)
rm(a)
rm(a2)
# trying option 3 for TukeyHSD
fit_mod_hsd <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a)
tibble(drt = h$groups[1,2],
sat = h$groups[2,2],
tzsat = h$groups[3,2],
fm = h$groups[4,2])
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_mod_hsd(.))  ->
option3_hsd
# trying option 3 for TukeyHSD
fit_mod_hsd <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a)
#create a tibble with one column for each
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(drt = h$groups[1,2], sat = h$groups[2,2], tzsat = h$groups[3,2],fm = h$groups[4,2])
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_mod_hsd(.))  ->
option3_hsd
attach(fticr_pore_relabundance_long)
a <-aov(relabund ~ treatment)
h <-HSD.test(a)
h <-HSD.test(a,"treatment")
h
# trying option 3 for TukeyHSD
fit_mod_hsd <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a,"treatment")
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(drt = h$groups[1,2],
sat = h$groups[2,2],
tzsat = h$groups[3,2],
fm = h$groups[4,2])
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_mod_hsd(.))  ->
option3_hsd
View(option3_hsd)
source("4-fticr_pores.R")
View(fticr_pore_relabundance)
View(fticr_pore_relabundance_long)
View(fticr_pore_relabundance_summary)
fit_hsd_relabund <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a,"treatment")
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`drought` = h$groups[1,2],
`saturation` = h$groups[2,2],
`time zero saturation` = h$groups[3,2],
`field moist` = h$groups[4,2])
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_hsd_relabund(.))  ->
option3_hsd
View(option3_hsd)
warnings()
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_hsd_relabund(.))  ->
pore_relabund_hsd
View(pore_relabund_hsd)
pore_relabund_hsd %>%
gather(treatment, hsd, drought:`time zero saturation`)->
pore_relabund_hsd
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_hsd_relabund(.))  ->
pore_relabund_hsd
h
sort(h$groups)
h$groups
h$groups$drought
tibble(h$groups)
tibble(h$groups$groups)
tibble(h$groups$groups$names)
names(h$groups)
h$groups[0,1]
h$groups[0,2]
h$groups[1,0]
tidy(h$groups)
library(broom)
tidy(h$groups)
tidy(h)
?tidy
h
tidy(h$groups)
augment(h)
augment(h$groups)
h <-HSD.test(a,"treatment", ordered = TRUE)
?HSD.test()
tidy(a)
a
tidy(a)
h
h$groups$[NULL]
h$groups$NULL
ano <-anova(lme(relabund ~ treatment)
ano <-anova(lme(relabund ~ treatment))
ano <-anova(lme(relabund ~ treatment, data = fticr_pore_relabundance_long))
ano <-anova(lme(relabund ~ treatment+ random = 1|core, data = fticr_pore_relabundance_long))
ano <-anova(lme(relabund ~ treatment + random = ~1|core, data = fticr_pore_relabundance_long))
ano <-anova(lme(relabund ~ treatment, random = ~1|core, data = fticr_pore_relabundance_long))
ano
TukeyHSD(ano)
ano <-aov(lme(relabund ~ treatment, random = ~1|core, data = fticr_pore_relabundance_long))
TukeyHSD(ano)
class(TukeyHSD(ano))
h = HSD.test(a,"treatment",group = TRUE, console = TRUE)
tidy(h)
h$groups
h = HSD.test(a,"treatment",group = TRUE, console = TRUE)
h = HSD.test(a,"treatment",group = TRUE)
h
h = HSD.test(a,"treatment",group = TRUE, console = TRUE)
h$groups
names(h$groups)
names(h)
h$comparison
h$means
h = HSD.test(a,"treatment",group = TRUE)
h
h = HSD.test(a,"treatment",group = TRUE, console = TRUE)
ano <-aov(lme(relabund ~ treatment, random = ~1|core, data = fticr_pore_relabundance_long[fticr_pore_relabundance_long$site=="CPCRW",]))
TukeyHSD(ano)
class(TukeyHSD(ano))
h = HSD.test(ano,"treatment",group = TRUE, console = TRUE)
ano <-aov(lme(relabund ~ treatment, random = ~1|core, data = fticr_pore_relabundance_long[fticr_pore_relabundance_long$site=="CPCRW"&fticr_pore_relabundance_long$tension=="50 kPa",]))
TukeyHSD(ano)
class(TukeyHSD(ano))
h = HSD.test(ano,"treatment",group = TRUE, console = TRUE)
a = aov(relabund ~ treatment, data = fticr_pore_relabundance_long[fticr_pore_relabundance_long$site=="CPCRW"&fticr_pore_relabundance_long$tension=="50 kPa",]))
a = aov(relabund ~ treatment, data = fticr_pore_relabundance_long[fticr_pore_relabundance_long$site=="CPCRW"&fticr_pore_relabundance_long$tension=="50 kPa",])
h = HSD.test(a,"treatment",group = TRUE, console = TRUE)
a = aov(relabund ~ treatment, data = fticr_pore_relabundance_long)
a = aov(relabund ~ treatment, data = fticr_pore_relabundance_long[fticr_pore_relabundance_long$site=="CPCRW"
&fticr_pore_relabundance_long$tension=="50 kPa"&
fticr_pore_relabundance_long$group=="Carb",])
h = HSD.test(a,"treatment",group = TRUE, console = TRUE)
a = aov(relabund ~ treatment, data = fticr_pore_relabundance_long[fticr_pore_relabundance_long$group=="Carb",])
h = HSD.test(a,"treatment",group = TRUE, console = TRUE)
a = aov(relabund ~ treatment, data = fticr_pore_relabundance_long[fticr_pore_relabundance_long$site=="CPCRW"
&fticr_pore_relabundance_long$tension=="50 kPa"&
fticr_pore_relabundance_long$group=="Carb",])
h = HSD.test(a,"treatment",group = TRUE, console = TRUE)
names(h)
h$means
names(h$groups)
h = HSD.test(a,"treatment",console = TRUE)
h = HSD.test(a,"treatment");h
h = HSD.test(a,"treatment",group = TRUE);h
summary(h)
tidy_irlba(h)
tidy_irlba(h$groups)
h = HSD.test(a,"treatment",group = TRUE);h
tidy_irlba(h$groups)
?glht
?multcomp
install.packages("multcomp")
?glht
??glht
library(multcomp)
glht(a)
a
h
ano
a
glht(a)
glht(a, mcp(treatment="Tukey"))
summary(mc)
mc = glht(a, mcp(treatment="Tukey"))
summary(mc)
h
rownames(h$groups)
h$groups[2,1]
h$groups[2,2]
h$groups[1,2]
h$groups[1,drought]
h$groups[drought,1]
h$groups["drought",1]
h$groups["drought",2]
tibble(`drought` = h$groups["drought",2],
`saturation` = h$groups["saturation",2],
`time zero saturation` = h$groups["time zero saturation",2],
`field moist` = h$groups["field moist",2])
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`drought` = h$groups["drought",2],
`saturation` = h$groups["saturation",2],
`time zero saturation` = h$groups["time zero saturation",2],
`field moist` = h$groups["field moist",2])
a <-aov(relabund ~ treatment, data = dat)
fit_hsd_relabund <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a,"treatment", ordered = TRUE)
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`drought` = h$groups["drought",2],
`saturation` = h$groups["saturation",2],
`time zero saturation` = h$groups["time zero saturation",2],
`field moist` = h$groups["field moist",2])
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_hsd_relabund(.))  ->
pore_relabund_hsd
fit_hsd_relabund <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
h <-HSD.test(a,"treatment")
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`drought` = h$groups["drought",2],
`saturation` = h$groups["saturation",2],
`time zero saturation` = h$groups["time zero saturation",2],
`field moist` = h$groups["field moist",2])
}
fticr_pore_relabundance_long[!fticr_pore_relabundance_long$group=="total",] %>%
group_by(site, tension, group) %>%
do(fit_hsd_relabund(.))  ->
pore_relabund_hsd
pore_relabund_hsd %>%
gather(treatment, hsd, drought:`time zero saturation`)->
pore_relabund_hsd2
View(pore_relabund_hsd2)
View(pore_relabund_hsd)
pore_relabund_hsd %>%
gather(treatment, hsd, 4:7)->
pore_relabund_hsd2
view(fticr_pore_relabundance_summary)
fticr_pore_relabundance_summary2 = merge(fticr_pore_relabundance_summary, pore_relabund_hsd2, by = c("tension","site","group","treatment"))
View(fticr_pore_relabundance_summary2)
fticr_pore_relabundance_summary2$relativeabundance = paste(fticr_pore_relabundance_summary2$relativeabundance," ",fticr_pore_relabundance_summary2$hsd)
fticr_pore_relabundance_summary2table2 = dcast(fticr_pore_relabundance_summary2,
group~tension+site+treatment,value.var = "relativeabundance")
View(fticr_pore_relabundance_summary2table2)
write_csv(fticr_pore_relabundance_summary2table2,path = "fticr/fticr_pore_relabundance_groups2_hsd.csv")
# cast the table in a different manner, with groups as rows
fticr_pore_relabundance_summarytable2 = dcast(fticr_pore_relabundance_summary,
group~tension+site+treatment,value.var = "relativeabundance")
View(fticr_pore_relabundance_summarytable2)
# summarizing by groups
fticr_pore_gather2 %>%
group_by(tension,site,treatment,Class) %>%
dplyr::summarize(peaks = n()) %>% # get count of each group/class for each tension-site-treatment
group_by(tension,site,treatment) %>%
dplyr::mutate(total = sum(peaks)) -> # then create a new column for sum of all peaks for each tension-site-treatment
fticr_pore_peaks
# we need to combine the total value into the existing groups column
fticr_pore_peaks %>%
spread(Class,peaks) %>% # first, convert into wide-form, so each group is a column
select(-total,total) %>% # move total to the end
gather(Class,peaks_count,AminoSugar:total)-> # combine all the groups+total into a single column
fticr_pore_peaks2
View(fticr_pore_peaks)
# summarizing by groups
fticr_pore_gather2 %>%
group_by(tension,site,treatment,Class) %>%
dplyr::summarize(peaks = n()) %>% # get count of each group/class for each tension-site-treatment
group_by(tension,site,treatment) %>%
dplyr::mutate(total = sum(peaks)) -> # then create a new column for sum of all peaks for each tension-site-treatment
fticr_pore_peaks
View(fticr_pore_peaks)
# we need to combine the total value into the existing groups column
fticr_pore_peaks %>%
spread(Class,peaks) %>% # first, convert into wide-form, so each group is a column
select(-total,total) %>% # move total to the end
gather(Class,peaks_count,AminoSugar:total)-> # combine all the groups+total into a single column
fticr_pore_peaks2
# we need to combine the total value into the existing groups column
fticr_pore_peaks %>%
spread(Class,peaks)-># %>% # first, convert into wide-form, so each group is a column
#  select(-total,total) %>% # move total to the end
#  gather(Class,peaks_count,AminoSugar:total)-> # combine all the groups+total into a single column
fticr_pore_peaks2
View(fticr_pore_peaks2)
# we need to combine the total value into the existing groups column
fticr_pore_peaks %>%
spread(Class,peaks) %>% # first, convert into wide-form, so each group is a column
select(-total,total) ->#%>% # move total to the end
#  gather(Class,peaks_count,AminoSugar:total)-> # combine all the groups+total into a single column
fticr_pore_peaks2
# we need to combine the total value into the existing groups column
fticr_pore_peaks %>%
spread(Class,peaks) -> # first, convert into wide-form, so each group is a column
fticr_pore_peaks2
fticr_pore_peaks2 %>%
select(-total,total) %>% # move total to the end
gather(Class,peaks_count,AminoSugar:total)-> # combine all the groups+total into a single column
fticr_pore_peaks2
fticr_pore_peaks2 %>%
dplyr::select(-total,total) %>% # move total to the end
gather(Class,peaks_count,AminoSugar:total)-> # combine all the groups+total into a single column
fticr_pore_peaks2
# we need to combine the total value into the existing groups column
fticr_pore_peaks %>%
spread(Class,peaks) %>% # first, convert into wide-form, so each group is a column
dplyr::select(-total,total) %>% # move total to the end
gather(Class,peaks_count,AminoSugar:total)-> # combine all the groups+total into a single column
fticr_pore_peaks2
# now we need to format into a better table
# first, move total to the end
old.lvl = levels(factor(fticr_pore_peaks2$Class))
fticr_pore_peaks2$Class = factor(fticr_pore_peaks2$Class,
levels=c(sort(old.lvl[old.lvl!="total"]), "total"))
fticr_pore_peaks2 %>%
dcast(Class~tension+site+treatment, value.var = "peaks_count")->
fticr_pore_peaks3
View(fticr_pore_peaks3)
### stats on peaks counts
fit_hsd_peaks <- function(dat) {
a <-aov(peaks_count ~ treatment, data = dat)
h <-HSD.test(a,"treatment")
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`drought` = h$groups["drought",2],
`saturation` = h$groups["saturation",2],
`time zero saturation` = h$groups["time zero saturation",2],
`field moist` = h$groups["field moist",2])
}
fticr_pore_peaks2[!fticr_pore_peaks2$Class=="total",] %>%
group_by(site, tension, Class) %>%
do(fit_hsd_peaks(.))  ->
pore_peaks_hsd
### stats on peaks counts
fit_hsd_peaks <- function(dat) {
a <-aov(peaks_count ~ treatment, data = dat)
h <-HSD.test(a,"treatment")
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`drought` = h$groups["drought",2],
`saturation` = h$groups["saturation",2],
`time zero saturation` = h$groups["time zero saturation",2],
`field moist` = h$groups["field moist",2])
}
fticr_pore_peaks2[!fticr_pore_peaks2$Class=="total",] %>%
group_by(site, tension, Class) %>%
do(fit_hsd_peaks(.))  ->
pore_peaks_hsd
attach(fticr_pore_peaks2)
a <-aov(peaks_count ~ treatment)
h <-HSD.test(a,"treatment")
h
tibble(`drought` = h$groups["drought",2],
`saturation` = h$groups["saturation",2],
`time zero saturation` = h$groups["time zero saturation",2],
`field moist` = h$groups["field moist",2])
### stats on peaks counts
fit_hsd_peaks <- function(dat) {
a <-aov(peaks_count ~ treatment, data = dat)
h <-HSD.test(a,"treatment")
#create a tibble with one column for each treatment
#the hsd results are row1 = drought, row2 = saturation, row3 = time zero saturation, row4 = field moist. hsd letters are in column 2
tibble(`drought` = h$groups["drought",2],
`saturation` = h$groups["saturation",2],
`time zero saturation` = h$groups["time zero saturation",2],
`field moist` = h$groups["field moist",2])
}
fticr_pore_peaks2[!fticr_pore_peaks2$Class=="total",] %>%
group_by(site, tension, Class) %>%
do(fit_hsd_peaks(.))  ->
pore_peaks_hsd
fticr_pore_peaks2%>%
group_by(site, tension, Class) %>%
do(fit_hsd_peaks(.))  ->
pore_peaks_hsd
fticr_pore_peaks2[!fticr_pore_peaks2$Class=="total",] %>%
do(fit_hsd_peaks(.))  ->
pore_peaks_hsd
a
h
h$groups
tibble(`drought` = h$groups["drought",2],
`saturation` = h$groups["saturation",2],
`time zero saturation` = h$groups["time zero saturation",2],
`field moist` = h$groups["field moist",2])
fticr_pore_peaks2[!fticr_pore_peaks2$Class=="total",]
fticr_pore_peaks2[!fticr_pore_peaks2$Class=="total",] %>%
group_by(site, tension, Class) %>%
do(fit_hsd_peaks(.))  ->
pore_peaks_hsd
view(fticr_pore_relabundance_long)
view(fticr_pore_gather2)
view(fticr_pore_gather2)
