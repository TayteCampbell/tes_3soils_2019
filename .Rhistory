soil_hcoc = read.csv(FTICR_SOIL_HCOC)# <- "fticr/fticr_soil_hcoc.csv"
soil_unique = read.csv(FTICR_SOIL_UNIQUE)# <- "fticr/fticr_soil_uniquemolecules.csv"
soil_relabund = read.csv(FTICR_SOIL_RELABUND)# <- "fticr/fticr_soil_relabundance_hsd.csv"
soil_peaks = read.csv(FTICR_SOIL_PEAKS)# <- "fticr/fticr_soil_peakscount.csv"
soil_unique_peaks = read.csv(FTICR_SOIL_UNIQUE_PEAKS)# <- "fticr/fticr_soil_unique_peakscount.csv"
View(wsoc_soil)
source("0-packages.R")
#
## WSOC concentrations -- pores ####
wsoc_pores = read_excel("data/3Soils_WSOC_CN_PoreCore.xlsx")
names(wsoc_pores)
wsoc_pores$wsoc = wsoc_pores$`Water Soluble Organic Carbon (mg/L)`
#rename and reorder factors in Treatment
wsoc_pores$Treatment = factor(wsoc_pores$Treatment,
levels = c("Time Zero Saturation",
"Field Moisture Incubation",
"Saturation Incubation",
"Drought Incubation"),
labels = c("Time Zero",
"Field Moist",
"Saturated",
"Drought"))
#remove NA
wsoc_pores = wsoc_pores[complete.cases(wsoc_pores),]
#overall LME site/treatment/suction
lme_trt_pore=lme(log(wsoc)~Site*Treatment*Suction,random=~1|CoreNo,data=wsoc_pores);Anova(lme_trt_pore)
#capture.output(Anova(lme_trt_pore),file = "pore_wsoc_anova.txt")
attach(wsoc_pores)
wsoc_pore_hsd = HSD.test(aov(lme_trt_pore),trt = "Treatment")
fit_dunnett_wsoc <- function(dat) {
d <-DescTools::DunnettTest(wsoc~Treatment, control = "Time Zero", data = dat)
#create a tibble with one column for each treatment
# column 4 has the pvalue
t = tibble(`Drought` = d$`Time Zero`["Drought-Time Zero",4],
`Saturated` = d$`Time Zero`["Saturated-Time Zero",4],
`Field Moist` = d$`Time Zero`["Field Moist-Time Zero",4])
# we need to convert significant p values to asterisks
# since the values are in a single row, it is tricky
t %>%
# first, gather all p-values into a single column, pval
gather(trt, pval, 1:3) %>%
# conditionally replace all significant pvalues (p<0.05) with asterisks and the rest remain blank
mutate(p = if_else(pval<0.05, "*","")) %>%
# remove the pval column
dplyr::select(-pval) %>%
# spread the p (asterisks) column bnack into the three columns
spread(trt, p)  ->
t
}
wsoc_pores %>%
group_by(Site, Suction) %>%
do(fit_dunnett_wsoc(.))  ->
wsoc_pores_dunnett
wsoc_pores_dunnett %>%
gather(treatment, dunnett, 3:5)-> #gather columns 4-7 (treatment levels)
wsoc_pores_dunnett2
### WSOC concentrations -- pores -- summary table ----
wsoc_pores_rmisc=summarySE(wsoc_pores,measurevar = "wsoc", groupvars=c("Site","Suction","Treatment"),na.rm=TRUE)
wsoc_pores_rmisc$wsoc_mg_L = paste(round(wsoc_pores_rmisc$wsoc,2),"\u00B1",round(wsoc_pores_rmisc$se,2))
# merge the summary table with the hsd/dunnett table
wsoc_pores_rmisc %>%
left_join(wsoc_pores_dunnett2,by = c("Site","Suction"), all.x = TRUE) %>%
replace(.,is.na(.),"") %>%
dplyr::mutate(wsoc_hsd = paste(wsoc_mg_L,dunnett)) %>%
dplyr::select(-sd,-se,-ci,-dunnett)->
wsoc_pores_summary
### OUTPUT
write.csv(wsoc_pores_summary, WSOC_PORE)
## WSOC concentrations -- soils ---- ----
wsoc_soils = read_excel("data/3Soils_WSOC_CN_PoreCore_soils.xlsx")
names(wsoc_soils)
wsoc_soils$wsoc_mg_g = wsoc_soils$`WSOC mgCg-1soil`
wsoc_soils$Treatment = factor(wsoc_soils$Treatment,
levels = c("Time Zero Saturation",
"Field Moisture Incubation",
"Saturation Incubation",
"Drought Incubation"),
labels = c("Time Zero",
"Field Moist",
"Saturated",
"Drought"))
wsoc_soils_rmisc = summarySE(wsoc_soils,measurevar = "wsoc_mg_g",groupvars = c("Site","Treatment"),na.rm = TRUE)
wsoc_soils_rmisc = wsoc_soils_rmisc[complete.cases(wsoc_soils_rmisc),]
wsoc_soils_rmisc$WSOC_mg_g = paste(round(wsoc_soils_rmisc$wsoc_mg_g,2),"\u00B1",round(wsoc_soils_rmisc$se,2))
fit_dunnett_wsoc_soil <- function(dat) {
d <-DescTools::DunnettTest(wsoc_mg_g~Treatment, control = "Time Zero", data = dat)
#create a tibble with one column for each treatment
# column 4 has the pvalue
t = tibble(`Drought` = d$`Time Zero`["Drought-Time Zero",4],
`Saturated` = d$`Time Zero`["Saturated-Time Zero",4],
`Field Moist` = d$`Time Zero`["Field Moist-Time Zero",4])
# we need to convert significant p values to asterisks
# since the values are in a single row, it is tricky
t %>%
# first, gather all p-values into a single column, pval
gather(trt, pval, 1:3) %>%
# conditionally replace all significant pvalues (p<0.05) with asterisks and the rest remain blank
mutate(p = if_else(pval<0.05, "*","")) %>%
# remove the pval column
dplyr::select(-pval) %>%
# spread the p (asterisks) column bnack into the three columns
spread(trt, p)  ->
t
}
wsoc_soils = wsoc_soils[complete.cases(wsoc_soils),]
wsoc_soils %>%
group_by(Site) %>%
do(fit_dunnett_wsoc_soil(.))  ->
wsoc_soil_dunnett
wsoc_soil_dunnett %>%
gather(treatment, dunnett, 2:4)-> #gather columns 4-7 (treatment levels)
wsoc_soil_dunnett2
# merge the summary table with the hsd/dunnett table
wsoc_soils_rmisc %>%
left_join(wsoc_soil_dunnett2,by = c("Site"), all.x = TRUE) %>%
replace(.,is.na(.),"") %>%
dplyr::mutate(wsoc_hsd = paste(WSOC_mg_g,dunnett)) %>%
dplyr::select(-sd,-se,-ci,-dunnett)->
wsoc_soils_summary
### OUTPUT
write.csv(wsoc_soils_summary, WSOC_SOIL)
View(wsoc_soils_summary)
View(wsoc_pores_summary)
# merge the summary table with the hsd/dunnett table
wsoc_soils_rmisc %>%
left_join(wsoc_soil_dunnett2,by = c("Site"), all.x = TRUE) %>%
replace(.,is.na(.),"") %>%
dplyr::mutate(wsoc_dunnett = paste(WSOC_mg_g,dunnett)) %>%
dplyr::select(-sd,-se,-ci,-dunnett)->
wsoc_soils_summary
### OUTPUT
write.csv(wsoc_soils_summary, WSOC_SOIL)
# merge the summary table with the hsd/dunnett table
wsoc_pores_rmisc %>%
left_join(wsoc_pores_dunnett2,by = c("Site","Suction"), all.x = TRUE) %>%
replace(.,is.na(.),"") %>%
dplyr::mutate(wsoc_dunnett = paste(wsoc_mg_L,dunnett)) %>%
dplyr::select(-sd,-se,-ci,-dunnett)->
wsoc_pores_summary
### OUTPUT
write.csv(wsoc_pores_summary, WSOC_PORE)
source("0-packages.R")
# input files
#   CHARAC
charac = read.csv(CHARACTERIZATION)# <- "processed/soil_characterization.csv"
pore = read.csv(PORE_DISTRIBUTION)# <- "processed/pore_distribution.csv"
# WSOC
wsoc_pore = read.csv(WSOC_PORE)# <- "processed/wsoc_pore_summary.csv"
wsoc_soil = read.csv(WSOC_SOIL)# <- "processed/wsoc_soils_summary.csv"
# FTICR_PORE
pore_aromatic = read.csv(FTICR_PORE_AROMATIC)# <- "fticr/fticr_pore_aromatic_counts.csv"
pore_meta = read.csv(FTICR_PORE_META)# <- "fticr/fticr_pore_meta.csv"
pore_long = read.csv(FTICR_PORE_LONG)# <- "fticr/fticr_pore_longform.csv"
pore_relabund = read.csv(FTICR_PORE_RELABUND)# <- "fticr/fticr_pore_relabundance_groups2_hsd.csv"
pore_peaks = read.csv(FTICR_PORE_PEAKS)# <- "fticr/fticr_pore_peakscount.csv"
pore_unique = read.csv(FTICR_PORE_UNIQUE)# <- "fticr/fticr_pore_uniquemolecules.csv"
pore_unique_peaks = read.csv(FTICR_PORE_UNIQUE_PEAKS)# <- "fticr/fticr_pore_unique_peakscount.csv"
pore_hcoc = read.csv(FTICR_PORE_HCOC)# <- "fticr/fticr_pore_hcoc.csv"
pore_nosc = read.csv(FTICR_PORE_NOSC)# <- "fticr/fticr_pore_nosc.csv"
#FTICR_SOIL
soil_aromatic = read.csv(FTICR_SOIL_AROMATIC)# <- "fticr/fticr_soil_aromatic_counts.csv"
soil_nosc = read.csv(FTICR_SOIL_NOSC)# <- "fticr/fticr_soil_nosc.csv"
soil_hcoc = read.csv(FTICR_SOIL_HCOC)# <- "fticr/fticr_soil_hcoc.csv"
soil_unique = read.csv(FTICR_SOIL_UNIQUE)# <- "fticr/fticr_soil_uniquemolecules.csv"
soil_relabund = read.csv(FTICR_SOIL_RELABUND)# <- "fticr/fticr_soil_relabundance_hsd.csv"
soil_peaks = read.csv(FTICR_SOIL_PEAKS)# <- "fticr/fticr_soil_peakscount.csv"
soil_unique_peaks = read.csv(FTICR_SOIL_UNIQUE_PEAKS)# <- "fticr/fticr_soil_unique_peakscount.csv"
wsoc_soil %>%
ungroup %>%
dplyr::mutate(sp = paste(Site),
val = paste(wsoc_dunnett)) %>%
dplyr::select(Treatment,sp, val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
source("0-packages.R")
# input files
#   CHARAC
charac = read.csv(CHARACTERIZATION)# <- "processed/soil_characterization.csv"
pore = read.csv(PORE_DISTRIBUTION)# <- "processed/pore_distribution.csv"
# WSOC
wsoc_pore = read.csv(WSOC_PORE)# <- "processed/wsoc_pore_summary.csv"
wsoc_soil = read.csv(WSOC_SOIL)# <- "processed/wsoc_soils_summary.csv"
# FTICR_PORE
pore_aromatic = read.csv(FTICR_PORE_AROMATIC)# <- "fticr/fticr_pore_aromatic_counts.csv"
pore_meta = read.csv(FTICR_PORE_META)# <- "fticr/fticr_pore_meta.csv"
pore_long = read.csv(FTICR_PORE_LONG)# <- "fticr/fticr_pore_longform.csv"
pore_relabund = read.csv(FTICR_PORE_RELABUND)# <- "fticr/fticr_pore_relabundance_groups2_hsd.csv"
pore_peaks = read.csv(FTICR_PORE_PEAKS)# <- "fticr/fticr_pore_peakscount.csv"
pore_unique = read.csv(FTICR_PORE_UNIQUE)# <- "fticr/fticr_pore_uniquemolecules.csv"
pore_unique_peaks = read.csv(FTICR_PORE_UNIQUE_PEAKS)# <- "fticr/fticr_pore_unique_peakscount.csv"
pore_hcoc = read.csv(FTICR_PORE_HCOC)# <- "fticr/fticr_pore_hcoc.csv"
pore_nosc = read.csv(FTICR_PORE_NOSC)# <- "fticr/fticr_pore_nosc.csv"
#FTICR_SOIL
soil_aromatic = read.csv(FTICR_SOIL_AROMATIC)# <- "fticr/fticr_soil_aromatic_counts.csv"
soil_nosc = read.csv(FTICR_SOIL_NOSC)# <- "fticr/fticr_soil_nosc.csv"
soil_hcoc = read.csv(FTICR_SOIL_HCOC)# <- "fticr/fticr_soil_hcoc.csv"
soil_unique = read.csv(FTICR_SOIL_UNIQUE)# <- "fticr/fticr_soil_uniquemolecules.csv"
soil_relabund = read.csv(FTICR_SOIL_RELABUND)# <- "fticr/fticr_soil_relabundance_hsd.csv"
soil_peaks = read.csv(FTICR_SOIL_PEAKS)# <- "fticr/fticr_soil_peakscount.csv"
soil_unique_peaks = read.csv(FTICR_SOIL_UNIQUE_PEAKS)# <- "fticr/fticr_soil_unique_peakscount.csv"
wsoc_soil %>%
dplyr::select(Treatment,Site, wsoc_dunnett) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
wsoc_soil %>%
ungroup %>%
dplyr::mutate(sp = paste(Site),
val = paste(wsoc_dunnett)) %>%
dplyr::select(Treatment,sp, val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
wsoc_soil %>%
ungroup %>%
dplyr::mutate(sp = paste(Site),
val = paste(wsoc_dunnett)) %>%
dplyr::select(Treatment,sp, val) ->t
t
t %>% spread(sp,val)
t %>% dplyr::spread(sp,val)
t %>% tidyr::spread(sp,val)
wsoc_soil %>%
ungroup %>%
dplyr::select(Treatment,Site, wsoc_dunnett) %>%
spread(Site, wsoc_dunnett) %>%
knitr::kable(align = "r")
wsoc_soil %>%
ungroup %>%
dplyr::select(Treatment,Site, wsoc_dunnett) %>%
spread(Site, wsoc_dunnett) ->t
wsoc_soil %>%
ungroup %>%
dplyr::select(Treatment,Site, wsoc_dunnett) ->t
View(t)
## WSOC concentrations -- soils ---- ----
wsoc_soils = read_excel("data/3Soils_WSOC_CN_PoreCore_soils.xlsx")
View(wsoc_soils)
names(wsoc_soils)
wsoc_soils$wsoc_mg_g = wsoc_soils$`WSOC mgCg-1soil`
wsoc_soils$Treatment = factor(wsoc_soils$Treatment,
levels = c("Time Zero Saturation",
"Field Moisture Incubation",
"Saturation Incubation",
"Drought Incubation"),
labels = c("Time Zero",
"Field Moist",
"Saturated",
"Drought"))
wsoc_soils_rmisc = summarySE(wsoc_soils,measurevar = "wsoc_mg_g",groupvars = c("Site","Treatment"),na.rm = TRUE)
wsoc_soils_rmisc = wsoc_soils_rmisc[complete.cases(wsoc_soils_rmisc),]
wsoc_soils_rmisc$WSOC_mg_g = paste(round(wsoc_soils_rmisc$wsoc_mg_g,2),"\u00B1",round(wsoc_soils_rmisc$se,2))
View(wsoc_soils_rmisc)
fit_dunnett_wsoc_soil <- function(dat) {
d <-DescTools::DunnettTest(wsoc_mg_g~Treatment, control = "Time Zero", data = dat)
#create a tibble with one column for each treatment
# column 4 has the pvalue
t = tibble(`Drought` = d$`Time Zero`["Drought-Time Zero",4],
`Saturated` = d$`Time Zero`["Saturated-Time Zero",4],
`Field Moist` = d$`Time Zero`["Field Moist-Time Zero",4])
# we need to convert significant p values to asterisks
# since the values are in a single row, it is tricky
t %>%
# first, gather all p-values into a single column, pval
gather(trt, pval, 1:3) %>%
# conditionally replace all significant pvalues (p<0.05) with asterisks and the rest remain blank
mutate(p = if_else(pval<0.05, "*","")) %>%
# remove the pval column
dplyr::select(-pval) %>%
# spread the p (asterisks) column bnack into the three columns
spread(trt, p)  ->
t
}
wsoc_soils = wsoc_soils[complete.cases(wsoc_soils),]
wsoc_soils %>%
group_by(Site) %>%
do(fit_dunnett_wsoc_soil(.))  ->
wsoc_soil_dunnett
View(wsoc_soil_dunnett)
wsoc_soil_dunnett %>%
gather(treatment, dunnett, 2:4)-> #gather columns 4-7 (treatment levels)
wsoc_soil_dunnett2
View(wsoc_soil_dunnett2)
# merge the summary table with the hsd/dunnett table
wsoc_soils_rmisc %>%
left_join(wsoc_soil_dunnett2,by = c("Site"), all.x = TRUE) %>%
replace(.,is.na(.),"") %>%
dplyr::mutate(wsoc_dunnett = paste(WSOC_mg_g,dunnett)) %>%
dplyr::select(-sd,-se,-ci,-dunnett)->
wsoc_soils_summary
View(wsoc_soils_summary)
wsoc_soil_dunnett %>%
gather(Treatment, dunnett, 2:4)-> #gather columns 4-7 (treatment levels)
wsoc_soil_dunnett2
# merge the summary table with the hsd/dunnett table
wsoc_soils_rmisc %>%
left_join(wsoc_soil_dunnett2,by = c("Site","Treatment"), all.x = TRUE) %>%
replace(.,is.na(.),"") %>%
dplyr::mutate(wsoc_dunnett = paste(WSOC_mg_g,dunnett)) %>%
dplyr::select(-sd,-se,-ci,-dunnett)->
wsoc_soils_summary
### OUTPUT
write.csv(wsoc_soils_summary, WSOC_SOIL)
#
## WSOC concentrations -- pores ####
wsoc_pores = read_excel("data/3Soils_WSOC_CN_PoreCore.xlsx")
names(wsoc_pores)
wsoc_pores$wsoc = wsoc_pores$`Water Soluble Organic Carbon (mg/L)`
#rename and reorder factors in Treatment
wsoc_pores$Treatment = factor(wsoc_pores$Treatment,
levels = c("Time Zero Saturation",
"Field Moisture Incubation",
"Saturation Incubation",
"Drought Incubation"),
labels = c("Time Zero",
"Field Moist",
"Saturated",
"Drought"))
#remove NA
wsoc_pores = wsoc_pores[complete.cases(wsoc_pores),]
fit_dunnett_wsoc <- function(dat) {
d <-DescTools::DunnettTest(wsoc~Treatment, control = "Time Zero", data = dat)
#create a tibble with one column for each treatment
# column 4 has the pvalue
t = tibble(`Drought` = d$`Time Zero`["Drought-Time Zero",4],
`Saturated` = d$`Time Zero`["Saturated-Time Zero",4],
`Field Moist` = d$`Time Zero`["Field Moist-Time Zero",4])
# we need to convert significant p values to asterisks
# since the values are in a single row, it is tricky
t %>%
# first, gather all p-values into a single column, pval
gather(trt, pval, 1:3) %>%
# conditionally replace all significant pvalues (p<0.05) with asterisks and the rest remain blank
mutate(p = if_else(pval<0.05, "*","")) %>%
# remove the pval column
dplyr::select(-pval) %>%
# spread the p (asterisks) column bnack into the three columns
spread(trt, p)  ->
t
}
wsoc_pores %>%
group_by(Site, Suction) %>%
do(fit_dunnett_wsoc(.))  ->
wsoc_pores_dunnett
wsoc_pores_dunnett %>%
gather(Treatment, dunnett, 3:5)-> #gather columns 4-7 (treatment levels)
wsoc_pores_dunnett2
### WSOC concentrations -- pores -- summary table ----
wsoc_pores_rmisc=summarySE(wsoc_pores,measurevar = "wsoc", groupvars=c("Site","Suction","Treatment"),na.rm=TRUE)
wsoc_pores_rmisc$wsoc_mg_L = paste(round(wsoc_pores_rmisc$wsoc,2),"\u00B1",round(wsoc_pores_rmisc$se,2))
# merge the summary table with the hsd/dunnett table
wsoc_pores_rmisc %>%
left_join(wsoc_pores_dunnett2,by = c("Site","Suction","Treatment"), all.x = TRUE) %>%
replace(.,is.na(.),"") %>%
dplyr::mutate(wsoc_dunnett = paste(wsoc_mg_L,dunnett)) %>%
dplyr::select(-sd,-se,-ci,-dunnett)->
wsoc_pores_summary
### OUTPUT
write.csv(wsoc_pores_summary, WSOC_PORE)
```{r setup, include=FALSE, echo=FALSE}
source("0-packages.R")
# input files
#   CHARAC
charac = read.csv(CHARACTERIZATION)# <- "processed/soil_characterization.csv"
pore = read.csv(PORE_DISTRIBUTION)# <- "processed/pore_distribution.csv"
# WSOC
wsoc_pore = read.csv(WSOC_PORE)# <- "processed/wsoc_pore_summary.csv"
wsoc_soil = read.csv(WSOC_SOIL)# <- "processed/wsoc_soils_summary.csv"
# FTICR_PORE
pore_aromatic = read.csv(FTICR_PORE_AROMATIC)# <- "fticr/fticr_pore_aromatic_counts.csv"
pore_meta = read.csv(FTICR_PORE_META)# <- "fticr/fticr_pore_meta.csv"
pore_long = read.csv(FTICR_PORE_LONG)# <- "fticr/fticr_pore_longform.csv"
pore_relabund = read.csv(FTICR_PORE_RELABUND)# <- "fticr/fticr_pore_relabundance_groups2_hsd.csv"
pore_peaks = read.csv(FTICR_PORE_PEAKS)# <- "fticr/fticr_pore_peakscount.csv"
pore_unique = read.csv(FTICR_PORE_UNIQUE)# <- "fticr/fticr_pore_uniquemolecules.csv"
pore_unique_peaks = read.csv(FTICR_PORE_UNIQUE_PEAKS)# <- "fticr/fticr_pore_unique_peakscount.csv"
pore_hcoc = read.csv(FTICR_PORE_HCOC)# <- "fticr/fticr_pore_hcoc.csv"
pore_nosc = read.csv(FTICR_PORE_NOSC)# <- "fticr/fticr_pore_nosc.csv"
#FTICR_SOIL
soil_aromatic = read.csv(FTICR_SOIL_AROMATIC)# <- "fticr/fticr_soil_aromatic_counts.csv"
soil_nosc = read.csv(FTICR_SOIL_NOSC)# <- "fticr/fticr_soil_nosc.csv"
soil_hcoc = read.csv(FTICR_SOIL_HCOC)# <- "fticr/fticr_soil_hcoc.csv"
soil_unique = read.csv(FTICR_SOIL_UNIQUE)# <- "fticr/fticr_soil_uniquemolecules.csv"
soil_relabund = read.csv(FTICR_SOIL_RELABUND)# <- "fticr/fticr_soil_relabundance_hsd.csv"
soil_peaks = read.csv(FTICR_SOIL_PEAKS)# <- "fticr/fticr_soil_peakscount.csv"
soil_unique_peaks = read.csv(FTICR_SOIL_UNIQUE_PEAKS)# <- "fticr/fticr_soil_unique_peakscount.csv"
wsoc_soil %>%
ungroup %>%
dplyr::mutate(sp = paste(Site),
val = paste(wsoc_dunnett)) %>%
dplyr::select(Treatment,sp, val) ->t
spread(sp, val) %>%
knitr::kable(align = "r")
wsoc_soil %>%
ungroup %>%
dplyr::mutate(sp = paste(Site),
val = paste(wsoc_dunnett)) %>%
dplyr::select(Treatment,sp, val) ->t
wsoc_soil %>%
ungroup %>%
dplyr::mutate(sp = paste(Site),
val = paste(wsoc_dunnett)) %>%
dplyr::select(Treatment,sp, val) %>%
spread(sp, val) %>%
knitr::kable(align = "r")
source("0-packages.R")
# input files
#   CHARAC
charac = read.csv(CHARACTERIZATION)# <- "processed/soil_characterization.csv"
pore = read.csv(PORE_DISTRIBUTION)# <- "processed/pore_distribution.csv"
# WSOC
wsoc_pore = read.csv(WSOC_PORE)# <- "processed/wsoc_pore_summary.csv"
wsoc_soil = read.csv(WSOC_SOIL)# <- "processed/wsoc_soils_summary.csv"
# FTICR
soil_raw = read.csv(FTICR_SOIL_RAW_LONG)# <- "fticr/fticr_soil_raw_longform.csv"
soil_long = read.csv(FTICR_SOIL_LONG)# <- "fticr/fticr_soil_longform.csv"
pore_long = read.csv(FTICR_PORE_LONG)# <- "fticr/fticr_pore_longform.csv"
pore_raw = read.csv(FTICR_PORE_RAW_LONG)# <- "fticr/fticr_pore_raw_longform.csv"
# FTICR_PORE
pore_aromatic = read.csv(FTICR_PORE_AROMATIC)# <- "fticr/fticr_pore_aromatic_counts.csv"
pore_meta = read.csv(FTICR_PORE_META)# <- "fticr/fticr_pore_meta.csv"
pore_long = read.csv(FTICR_PORE_LONG)# <- "fticr/fticr_pore_longform.csv"
pore_relabund = read.csv(FTICR_PORE_RELABUND)# <- "fticr/fticr_pore_relabundance_groups2_hsd.csv"
pore_peaks = read.csv(FTICR_PORE_PEAKS)# <- "fticr/fticr_pore_peakscount.csv"
pore_unique = read.csv(FTICR_PORE_UNIQUE)# <- "fticr/fticr_pore_uniquemolecules.csv"
pore_unique_peaks = read.csv(FTICR_PORE_UNIQUE_PEAKS)# <- "fticr/fticr_pore_unique_peakscount.csv"
pore_hcoc = read.csv(FTICR_PORE_HCOC)# <- "fticr/fticr_pore_hcoc.csv"
pore_nosc = read.csv(FTICR_PORE_NOSC)# <- "fticr/fticr_pore_nosc.csv"
#FTICR_SOIL
soil_aromatic = read.csv(FTICR_SOIL_AROMATIC)# <- "fticr/fticr_soil_aromatic_counts.csv"
soil_nosc = read.csv(FTICR_SOIL_NOSC)# <- "fticr/fticr_soil_nosc.csv"
soil_hcoc = read.csv(FTICR_SOIL_HCOC)# <- "fticr/fticr_soil_hcoc.csv"
soil_unique = read.csv(FTICR_SOIL_UNIQUE)# <- "fticr/fticr_soil_uniquemolecules.csv"
soil_relabund = read.csv(FTICR_SOIL_RELABUND)# <- "fticr/fticr_soil_relabundance_hsd.csv"
soil_peaks = read.csv(FTICR_SOIL_PEAKS)# <- "fticr/fticr_soil_peakscount.csv"
soil_unique_peaks = read.csv(FTICR_SOIL_UNIQUE_PEAKS)# <- "fticr/fticr_soil_unique_peakscount.csv"
ggplot(pore_long[pore_long$treatment=="time zero saturation",],
aes(x = OC, y = HC, color = site))+
geom_point(alpha = 0.1)+
scale_color_brewer(palette = "Set1")+
xlab("O/C")+
ylab("H/C")+
xlim(0,1.27)+
ylim(0,2.7)+
geom_segment(x = 0.0, y = 1.5, xend = 1.2, yend = 1.5,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 2, xend = 1.2, yend = 2,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 1, xend = 1.2, yend = 0.75,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 0.7, xend = 1.2, yend = 0.5,color="black",linetype="longdash")+
facet_grid(tension~site)+
guides(colour = guide_legend(override.aes = list(alpha = 1)))+
theme_bw()+
theme_kp()
gg_vankrev(pore_long[pore_long$treatment=="time zero saturation",])+
scale_color_brewer(palette = "Set1")+
facet_grid(tension~site)+
guides(colour = guide_legend(override.aes = list(alpha = 1)))+
theme_bw()+
theme_kp()
gg_vankrev(pore_long[pore_long$treatment=="time zero saturation",])+
scale_color_brewer(palette = "Set1")+
facet_grid(tension~site)+
guides(colour = guide_legend(override.aes = list(alpha = 1)))+
theme_bw()+
theme_kp()
pore_long %>%
dplyr::mutate(treatment = factor(treatment,
levels = c("time zero saturation","field moist","drought","saturation")))->
pore_long
gg_vankrev(pore_long)+
scale_color_brewer(palette = "Dark2")+
facet_grid(tension~site)+
guides(colour = guide_legend(override.aes = list(alpha = 1)))+
theme_bw()+
theme_kp()
gg_vankrev(pore_long, aes(x=OC, y=HC, color=treatment))+
scale_color_brewer(palette = "Dark2")+
facet_grid(tension~site)+
guides(colour = guide_legend(override.aes = list(alpha = 1)))+
theme_bw()+
theme_kp()
gg_vankrev(pore_long[!pore_long$treatment=="time zero saturation",], aes(x=OC, y=HC, color=treatment))+
scale_color_brewer(palette = "Dark2")+
facet_grid(tension~site)+
guides(colour = guide_legend(override.aes = list(alpha = 1)))+
theme_bw()+
theme_kp()
# set level of factors
pore_unique %>%
mutate(unique = factor(unique, levels = c("field_moist","drought","saturation")))->
pore_unique
ggplot(pore_unique,
aes(x = OC, y = HC, color = unique))+
geom_point(alpha = 0.4)+
scale_color_brewer(palette = "Dark2")+
xlab("O/C")+
ylab("H/C")+
xlim(0,1.27)+
ylim(0,2.7)+
geom_segment(x = 0.0, y = 1.5, xend = 1.2, yend = 1.5,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 2, xend = 1.2, yend = 2,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 1, xend = 1.2, yend = 0.75,color="black",linetype="longdash")+
geom_segment(x = 0.0, y = 0.7, xend = 1.2, yend = 0.5,color="black",linetype="longdash")+
facet_grid(tension~site)+
guides(colour = guide_legend(override.aes = list(alpha = 1)))+
theme_bw()+
theme_kp()
View(pore_unique)
pore_unique = read.csv(FTICR_PORE_UNIQUE)# <- "fticr/fticr_pore_uniquemolecules.csv"
View(pore_unique)
# set level of factors
pore_unique %>%
dplyr::mutate(unique = factor(unique, levels = c("field_moist","drought","saturation")))->
pore_unique
View(pore_unique)
